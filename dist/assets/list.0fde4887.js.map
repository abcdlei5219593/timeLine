{"version":3,"file":"list.0fde4887.js","sources":["../../src/views/Project/mock.ts","../../src/views/Project/list.vue"],"sourcesContent":["export const carTeam = [\r\n    {\r\n        id: '1',\r\n        label: '车队1',\r\n        children:[\r\n            {\r\n                id: '1-1',\r\n                label: '川A12345',\r\n            },\r\n            {\r\n                id: '1-2',\r\n                label: '川B67890',\r\n            },\r\n            {\r\n                id: '1-3',\r\n                label: '川C54321',\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: '2',\r\n        label: '车队2',\r\n        children:[\r\n            {\r\n                id: '2-1',\r\n                label: '川D98765',\r\n            },\r\n            {\r\n                id: '2-2',\r\n                label: '川E43210',\r\n            }\r\n        ]\r\n    }\r\n]\r\n\r\n\r\n\r\nexport const histroyMessages = [\r\n    {\r\n        id: '1',\r\n        carNumber: '川A12345',\r\n        time: '2023-10-01 10:00',\r\n        location: '成都',\r\n        content: '车辆已到达目的地',\r\n        type: 'info'\r\n    },\r\n    {\r\n        id: '2',\r\n        carNumber: '川B67890',\r\n        time: '2023-10-01 11:00',\r\n        location: '重庆',\r\n        content: '车辆正在途中，预计12点到达',\r\n        type: 'info'\r\n    },\r\n    {\r\n        id: '3',\r\n        carNumber: '川C54321',\r\n        time: '2023-10-01 12:00',\r\n        location: '西安',\r\n        content: '车辆发生故障，已联系维修人员',\r\n        type: 'danger'\r\n    },\r\n    {\r\n        id: '4',\r\n        carNumber: '川A12345',\r\n        time: '2023-10-01 10:00',\r\n        location: '成都',\r\n        content: '车辆已到达目的地',\r\n        type: 'info'\r\n    },\r\n    {\r\n        id: '5',\r\n        carNumber: '川B67890',\r\n        time: '2023-10-01 11:00',\r\n        location: '重庆',\r\n        content: '车辆正在途中，预计12点到达',\r\n        type: 'info'\r\n    },\r\n    {\r\n        id: '6',\r\n        carNumber: '川C54321',\r\n        time: '2023-10-01 12:00',\r\n        location: '西安',\r\n        content: '车辆发生故障，已联系维修人员',\r\n        type: 'danger'\r\n    },\r\n    {\r\n        id: '7',\r\n        carNumber: '川A12345',\r\n        time: '2023-10-01 10:00',\r\n        location: '成都',\r\n        content: '车辆已到达目的地',\r\n        type: 'info'\r\n    },\r\n    {\r\n        id: '8',\r\n        carNumber: '川B67890',\r\n        time: '2023-10-01 11:00',\r\n        location: '重庆',\r\n        content: '车辆正在途中，预计12点到达',\r\n        type: 'info'\r\n    },\r\n    {\r\n        id: '9',\r\n        carNumber: '川C54321',\r\n        time: '2023-10-01 12:00',\r\n        location: '西安',\r\n        content: '车辆发生故障，已联系维修人员',\r\n        type: 'danger'\r\n    },\r\n    {\r\n        id: '10',\r\n        carNumber: '川B67890',\r\n        time: '2023-10-01 11:00',\r\n        location: '重庆',\r\n        content: '车辆正在途中，预计12点到达',\r\n        type: 'info'\r\n    },\r\n    {\r\n        id: '11',\r\n        carNumber: '川C54321',\r\n        time: '2023-10-01 12:00',\r\n        location: '西安',\r\n        content: '车辆发生故障，已联系维修人员',\r\n        type: 'danger'\r\n    }\r\n]\r\n\r\n/**\r\n * 模拟前端分页方法\r\n * @param list 原始数据数组\r\n * @param page 当前页码（从 1 开始）\r\n * @param pageSize 每页条数\r\n * @returns { data: [], count: number }\r\n */\r\nexport const paginate = <T>({ list, page, pageSize }: {list: T[], page: number, pageSize: number}): { data: T[], total: number } => {\r\n    const total = list.length;\r\n   // const count = Math.ceil(total / pageSize); // 总页数\r\n\r\n    // 计算起始索引和结束索引\r\n    const start = (page - 1) * pageSize;\r\n    const end = start + pageSize;\r\n\r\n    const data = list.slice(start, end); // 当前页数据\r\n\r\n    return {\r\n        data,\r\n        total\r\n    };\r\n};\r\n\r\n\r\n\r\n\r\nexport const realtimeMsgMsg = [\r\n    {\r\n        id: '1-1',\r\n        carNumber: '川A12345',\r\n        time: '2023-10-01 10:00',\r\n        lat:   30.5728,\r\n        lng: 104.0668,\r\n        location: '成都',\r\n        errMsg: '车辆发生故障，已联系维修人员',\r\n\r\n    },\r\n    {\r\n        id: '1-2',\r\n        carNumber: '川B67890',\r\n        lat:   30,\r\n        lng: 103,\r\n        time: '2023-10-01 10:00',\r\n        location: '成都',\r\n        errMsg: '车辆发生故障，已联系维修人员',\r\n    },\r\n    {\r\n        id: '1-3',\r\n        carNumber: '川C54321',\r\n        lat:   31.5728,\r\n        lng: 105.0668,\r\n        time: '2023-10-01 10:00',\r\n        location: '成都',\r\n    },\r\n    {\r\n        id: '2-1',\r\n        carNumber: '川D98765',\r\n        lat:   32.5728,\r\n        lng: 106.0668,\r\n        time: '2023-10-01 10:00',\r\n        location: '成都',\r\n        errMsg: '车辆发生故障，已联系维修人员',\r\n    },\r\n    {\r\n        id: '2-2',\r\n        carNumber: '川E43210',\r\n        lat:   33.5728,\r\n        lng: 107.0668,\r\n        time: '2023-10-01 10:00',\r\n        location: '成都',\r\n\r\n    }\r\n]\r\n\r\nexport const getRealtimeMsg =  () => {\r\n    const updatedCarTeam = JSON.parse(JSON.stringify(realtimeMsgMsg)); // 深拷贝避免污染原数据\r\n    const totalVehicles = updatedCarTeam.length;\r\n    const errCount = Math.floor(totalVehicles / 3); // 约 1/3 的车辆添加异常信息\r\n\r\n    // 打乱数组并选出要操作的车辆\r\n    const shuffled = [...updatedCarTeam].sort(() => Math.random() - 0.5);\r\n    const selected = shuffled.slice(0, errCount);\r\n\r\n    // 为选中的车辆添加 errMsg 并随机改变经纬度\r\n    updatedCarTeam.forEach((car) => {\r\n      if (selected.some((s) => s.id === car.id)) {\r\n        car.errMsg = '车辆发生故障，已联系维修人员';\r\n        car.type = 'danger'; // 标记为异常车辆\r\n        // 随机微调经纬度（±0.001 范围内）\r\n        const deltaLng = (Math.random() - 0.5) * 0.2; // ±0.001\r\n        const deltaLat = (Math.random() - 0.5) * 0.2;\r\n\r\n        car.lng += deltaLng;\r\n        car.lat += deltaLat;\r\n      } else {\r\n        car.errMsg = ''; // 没有异常信息的车辆清空 errMsg\r\n      }\r\n    });\r\n\r\n    return updatedCarTeam;\r\n  };\r\n//车牌，时间，位置描述，消息内容，消息类型\r\n","<template>\r\n    <div class=\"main-content\" >\r\n        <section class=\"flex-box\" id=\"mapParentContainer\" style=\"height:500px;\">\r\n            <el-card header=\"车队\"  class=\"tree-card\" >\r\n                <el-form :model=\"searchForm\">\r\n                    <el-form-item>\r\n                        <el-input v-model=\"searchForm.carNumber\" placeholder=\"请输入车牌号\" @blur=\"handleSearchCard\">\r\n                        </el-input>\r\n                    </el-form-item>\r\n                    <el-form-item>\r\n                        <el-radio-group v-model=\"searchForm.carType\" @change=\"handleCarTypeChanged\">\r\n                            <el-radio\r\n                                v-for=\"item in radioOps\"\r\n                                :key=\"item.value\"\r\n                                :label=\"item.value\">\r\n                                {{ item.label }}\r\n                            </el-radio>\r\n\r\n                        </el-radio-group>\r\n                    </el-form-item>\r\n                </el-form>\r\n                <el-tree\r\n                    ref=\"treeRef\"\r\n                    show-checkbox\r\n                    node-key=\"id\"\r\n                    :data=\"carTeam\"\r\n                    :highlight-current=\"true\"\r\n                    @node-click=\"handleNodeClick\"\r\n                    @check-change=\"handleCarSeleted\"\r\n                />\r\n            </el-card>\r\n            <div class=\"map-layout\"><MyMap @init=\"initMap\" @resize=\"handleMapResize\"></MyMap></div>\r\n        </section>\r\n        <section class=\" table-box\">\r\n            <el-card header=\"历史告警信息\">\r\n                <el-table\r\n                    border\r\n                    id=\"userTable\"\r\n                    class=\"table\"\r\n                    :scrollbar-always-on=\"true\"\r\n                    :data=\"histroyTableList\"\r\n                    >\r\n                    <el-table-column prop=\"carNumber\" fixed label=\"车牌\" width=\"130\" />\r\n                    <el-table-column prop=\"time\" label=\"时间\"  width=\"180\" />\r\n                    <el-table-column prop=\"location\" label=\"位置描述\" width=\"180\" />\r\n                    <el-table-column prop=\"carNumber\" label=\"消息类型\" width=\"180\">\r\n                        <template #default=\"scope\" >\r\n                            <el-tag v-if=\"scope.row.content\" :type=\"scope.row.type\">{{scope.row.type === 'info' ? '提示信息' : '告警信息'}}</el-tag>\r\n                        </template>\r\n                    </el-table-column>\r\n                    <el-table-column prop=\"content\" label=\"消息内容\" width=\"400\" />\r\n                </el-table>\r\n\r\n                <el-pagination\r\n\r\n                    background\r\n                    layout=\"total,sizes,prev, pager, next,jumper\"\r\n                    :total=\"histroyTablePager.total\"\r\n                    :current-page=\"histroyTablePager.page\"\r\n                    :page-sizes=\"[10, 20, 50, 100]\"\r\n                    :page-size=\"histroyTablePager.pageSize\"\r\n                     @size-change=\"e => handleSizeChange('histroy', e)\"\r\n                    @current-change=\"e => handleCurrentChange('histroy', e)\"\r\n\r\n                />\r\n            </el-card>\r\n\r\n            <el-card header=\"实时告警信息\">\r\n                <el-table\r\n                    border\r\n                    id=\"userTable\"\r\n                    class=\"table\"\r\n                    :scrollbar-always-on=\"true\"\r\n                    :data=\"realtimeTableList\"\r\n                    >\r\n                    <el-table-column prop=\"carNumber\" fixed label=\"车牌\" width=\"130\" />\r\n                    <el-table-column prop=\"time\" label=\"时间\"  width=\"180\" />\r\n                    <el-table-column prop=\"location\" label=\"位置描述\" width=\"180\" />\r\n                    <el-table-column prop=\"carNumber\" label=\"消息类型\" width=\"180\">\r\n                        <template #default=\"scope\" >\r\n                            <el-tag v-if=\"scope.row.content\" :type=\"scope.row.type\">{{scope.row.type === 'info' ? '提示信息' : '告警信息'}}</el-tag>\r\n                        </template>\r\n                    </el-table-column>\r\n                    <el-table-column prop=\"content\" label=\"消息内容\" width=\"400\" />\r\n                    <el-table-column prop=\"carNumber\" label=\"操作\" width=\"55px\" fixed=\"right\">\r\n                        <template #default=\"scope\" >\r\n                            <el-button\r\n                                type=\"text\"\r\n                                @click=\"handleDelete(scope.row)\"\r\n                            >\r\n                                已读\r\n                            </el-button>\r\n                        </template>\r\n                    </el-table-column>\r\n                </el-table>\r\n\r\n                <el-pagination\r\n\r\n                    background\r\n                    layout=\"total,sizes,prev, pager, next,jumper\"\r\n                    :total=\"realTimeTablePager.total\"\r\n                    :current-page=\"realTimeTablePager.page\"\r\n                    :page-sizes=\"[10, 20, 50, 100]\"\r\n                    :page-size=\"realTimeTablePager.pageSize\"\r\n                     @size-change=\"e => handleSizeChange('realTime', e)\"\r\n                    @current-change=\"e => handleCurrentChange('realTime', e)\"\r\n\r\n                />\r\n            </el-card>\r\n        </section>\r\n    </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport useTableSetting from '@/hooks/useTableSetting';\r\nimport { ref, onMounted, onUnmounted, reactive, nextTick, watch } from 'vue';\r\nimport { ElMessage, ElTree, FormInstance, ElMessageBox } from 'element-plus';\r\n\r\nimport { getFlatDeepTreeData } from '@/utils/common';\r\nimport { Search, Plus } from '@element-plus/icons-vue';\r\nimport { getRealtimeMsg, carTeam as carTeamData, histroyMessages, paginate} from './mock';\r\nimport { Polling } from '@/helper/index';\r\nimport carIcon from '@/assets/images/car.png';\r\nimport  ErrorCarIcon from '@/assets/images/error-car.png';\r\n\r\nlet map = null;\r\nconst markers: object = {};\r\nlet isFirstLoad = true;\r\nlet mapPolling: Polling | null = null\r\nlet realtimeTablePolling: Polling | null = null\r\nlet currentInfoWindow = null; // 跟踪当前显示的信息窗口\r\n\r\nconst searchForm = reactive({\r\n    carNumber: '', //车牌号\r\n    carType: ''  // 为空表示全部类型\r\n})\r\n\r\nconst radioOps = ref([\r\n    { label: '全量车', value : 1 },\r\n    { label: '任务车', value : 2 },\r\n])\r\n\r\nconst carTeam = ref([]); // 车队树数据\r\n\r\nconst getCarTeam = () => {\r\n    // TODO 车队树数据接口\r\n    // 接口替换\r\n   // const carTeamData = await getFlatDeepTreeData();\r\n    carTeam.value = carTeamData   //接口数据绑定到JS内存\r\n}\r\n\r\ngetCarTeam()  // 初始化车队树数据\r\n\r\nconst handleMapResize = ({ height }) => {\r\n    const mapParentContainer = document.getElementById('mapParentContainer');\r\n   mapParentContainer.style.height = height +'px'\r\n}\r\nconst initMap = (mapInstance) => {\r\n    map = mapInstance;\r\n    mapPolling = new Polling(\r\n        3000,\r\n        async () => {\r\n            // TODO 地图点位轮询接口，\r\n            const params = {\r\n                carNumber: searchForm.carNumber,\r\n                treeData : treeData.value  // 车队树中选中的checkbox值集合， 默认是空数组， 根据接口自行组装该参数\r\n            }\r\n\r\n            const carList = await getRealtimeMsg();   // 接口替换\r\n\r\n            drawMarker(carList, map);\r\n        },\r\n\r\n    );\r\n    mapPolling.start();\r\n}\r\n\r\n\r\nconst handleSearchCard = () => {\r\n    // TODO 调用接口查询是否存在车辆, 返回布尔值, 如存在，则高亮该车辆\r\n\r\n    // const params = { carNumber: searchForm.carNumber  }\r\n    //  const hasTarget: boolean =  await https(params)\r\n    // if(hasTarget) {\r\n    //     hightLightNode(searchForm.carNumber);\r\n    // }\r\n}\r\n\r\n\r\nconst handleCarTypeChanged = () => {\r\n    // TODO , 返回布尔值, 如存在，则高亮该车辆\r\n\r\n    // const params = { carNumber: searchForm.carNumber  }\r\n    //  const hasTarget: boolean =  await https(params)\r\n    // if(hasTarget) {\r\n    //     hightLightNode(searchForm.carNumber);\r\n    // }\r\n}\r\n\r\nonMounted(() => {\r\n    // 历史数据轮询\r\n    realtimeTablePolling = new Polling(\r\n        5000,\r\n        () => {\r\n            // 模拟获取数据\r\n            getRealtimeTableList();\r\n        },\r\n\r\n    );\r\n    realtimeTablePolling.start();\r\n    getHistroyTableList();\r\n\r\n\r\n});\r\n\r\nonUnmounted(() => {\r\n    mapPolling?.stop()\r\n    realtimeTablePolling?.stop();\r\n})\r\n\r\nconst histroyTableList = ref<object[]>([])\r\n\r\nconst histroyTablePager = ref({\r\n    page: 1,\r\n    pageSize: 10,\r\n    total: 0,\r\n})\r\n\r\nconst realtimeTableList = ref<object[]>([])\r\n\r\nconst realtimeTablePager = ref({\r\n    page: 1,\r\n    pageSize: 10,\r\n    total: 0,\r\n})\r\n\r\nconst getHistroyTableList = async() => {\r\n    // TODO  历史告警信息  接口需要返回 list类型的data字段  和 总数据条数count字段，用于前端分页\r\n    // 接口入参params\r\n    const params = {\r\n        page: realtimeTablePager.value.page,\r\n        pageSize: realtimeTablePager.value.pageSize,\r\n        carType: searchForm.carType,    // 区分全量车和任务车\r\n        treeData : treeData.value  // 车队树中选中的checkbox值集合， 默认是空数组， 根据接口自行组装该参数\r\n    }\r\n    // 接口替换\r\n    const { data, total} = await paginate({\r\n        page: histroyTablePager.value.page,\r\n        pageSize: histroyTablePager.value.pageSize,\r\n        list: histroyMessages,\r\n    })\r\n\r\n    histroyTableList.value = data;\r\n    histroyTablePager.value.total = total;\r\n}\r\n\r\nconst getRealtimeTableList = async() => {\r\n    // TODO  调实时告警数据接口  接口需要返回 list类型的data字段  和 总数据条数count字段，用于前端分页\r\n    // 接口入参params\r\n    const params = {\r\n        page: realtimeTablePager.value.page,\r\n        pageSize: realtimeTablePager.value.pageSize,\r\n        carType: searchForm.carType,    // 区分全量车和任务车\r\n        treeData : treeData.value  // 车队树中选中的checkbox值集合， 默认是空数组， 根据接口自行组装该参数\r\n    }\r\n    // 接口替换\r\n    const { data, total} = await paginate({\r\n        page: realtimeTablePager.value.page,\r\n        pageSize: realtimeTablePager.value.pageSize,\r\n        list: histroyMessages.slice(0,2),\r\n    })\r\n\r\n\r\n    realtimeTableList.value = data;\r\n    realtimeTablePager.value.total = total;\r\n}\r\n\r\nconst handleDelete = ({ id }) => {\r\n    // TODO 调用已读接口\r\n\r\n    const index = realtimeTableList.value.findIndex(item => item.id === id); // 仅模拟删除效果，用接口替换\r\n    realtimeTableList.value.splice(index, 1);  // 仅模拟删除效果，用接口替换\r\n\r\n    ElMessage({\r\n        type: 'success',\r\n        message: '操作成功！',\r\n    });\r\n    //更新历史数据\r\n    getHistroyTableList()\r\n\r\n}\r\n\r\nconst handleSizeChange = (action: string, rows: number) => {\r\n    if(action === 'histroy') {\r\n        histroyTablePager.value.page = 1;\r\n        histroyTablePager.value.pageSize = rows;\r\n        getHistroyTableList()\r\n    } else {\r\n        realTimeTablePager.value.page = 1;\r\n        realTimeTablePager.value.pageSize = rows;\r\n    }\r\n\r\n};\r\nconst handleCurrentChange = (action: string, page: number) => {\r\n    if(action === 'histroy') {\r\n        histroyTablePager.value.page = page;\r\n        getHistroyTableList()\r\n    } else {\r\n        realTimeTablePager.value.page = page;\r\n        getRealtimeTableList();\r\n    }\r\n};\r\n\r\n\r\nconst realTimeTablePager = ref({\r\n    page: 1,\r\n    pageSize: 10,\r\n    total: 0,\r\n})\r\n\r\n\r\n\r\nconst getIcon = (ishighLight = false) => {\r\n    const iconPath = ishighLight\r\n        ? new URL('../..//assets/car_error.png', import.meta.url).href\r\n        : new URL('../../assets/car.png', import.meta.url).href;\r\n\r\n    return new AMap.Icon({\r\n        image: iconPath,\r\n        size: new AMap.Size(25, 25), // 图标尺寸\r\n        imageSize: new AMap.Size(25, 25) // 渲染时拉伸大小\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\nconst treeRef = ref(null)\r\nconst handleNodeClick = (data: any[] )=> {\r\n\r\n    hightLightNode(data.label);\r\n    // 处理节点点击事件\r\n    // 可以在这里执行其他操作，比如获取节点详情等\r\n};\r\n\r\n\r\nconst treeData = ref([])\r\nconst handleCarSeleted = () => {\r\n    treeData.value = treeRef.value!.getCheckedNodes(false, false)\r\n    getHistroyTableList()\r\n\r\n}\r\n\r\n\r\n\r\nconst drawMarker = (data: any[], map) => {\r\n    data.forEach(car => {\r\n        const { id, lng, lat, carNumber, err } = car;\r\n        if (markers[id]) {\r\n        // 已存在的车辆，更新位置\r\n            const position = new AMap.LngLat(lng, lat);\r\n            markers[id].setPosition(position);\r\n        } else {\r\n        // 新车辆，创建新的 marker\r\n            const marker = new AMap.Marker({\r\n\r\n                map,\r\n                icon:getIcon(),\r\n                position: [lng, lat],\r\n                offset: new AMap.Pixel(-13, -30),\r\n                extData: { ...car } // 存储车牌号用于匹配 // 可选：用于后续识别\r\n            });\r\n            marker.on('click', () => {\r\n                hightLightNode(car.carNumber);\r\n            });\r\n\r\n            markers[id] = marker;\r\n        }\r\n    });\r\n\r\n    if (isFirstLoad && data.length > 0) {\r\n        map.setFitView(); // 自动适配所有 Marker 显示在视野范围内\r\n        isFirstLoad = false; // 设置为非首次加载\r\n    }\r\n\r\n};\r\nconst hightLightMarker = ref(null) //\r\nconst hightLightNode = (carNumber: string) => {\r\n\r\n    // 清除所有高亮状态\r\n    Object.values(markers).forEach(marker => {\r\n        const extData = marker.getExtData();\r\n        marker.setIcon(getIcon());\r\n    });\r\n     // 关闭现有的信息窗口\r\n\r\n\r\n    // 查找并高亮匹配的 Marker\r\n    for (const id in markers) {\r\n        const marker = markers[id];\r\n        const extData = marker.getExtData();\r\n        if (extData && extData.carNumber === carNumber) {\r\n            // 设置高亮图标\r\n            if (hightLightMarker.value) {\r\n                const prevExtData = hightLightMarker.value.getExtData();\r\n                if (prevExtData.carNumber && prevExtData.carNumber === carNumber && currentInfoWindow) {\r\n                    currentInfoWindow.close();\r\n                    currentInfoWindow = null;\r\n                    hightLightMarker.value = null;\r\n                    // 如果当前高亮的就是这个节点，则不做任何操作\r\n                    return;\r\n                }\r\n            }\r\n            const position = marker.getPosition();\r\n            marker.setIcon(getIcon(true));\r\n            map.panTo(position,500); // 移动地图中心到车辆位置\r\n            hightLightMarker.value = marker;\r\n            setTimeout(() => {\r\n                showInfoWindow(marker);\r\n            }, 500);\r\n\r\n            break;\r\n        }\r\n    }\r\n};\r\n\r\nconst showInfoWindow = (marker) => {\r\n    const extData = marker.getExtData();\r\n    const position = marker.getPosition();\r\n\r\n    const content = `\r\n        <div class=\"info-window\">\r\n            <p><label>车牌号：</label>${extData.carNumber}</p>\r\n            <p><label>坐标：</label>${position.lng}, ${position.lat}</p>\r\n            <p><label>告警信息：</label>${extData.errMsg || '无'}</p>\r\n            <p>\r\n                <a  class=\"el-link el-link--primary \" href='#/workbench/system/road?vid=${extData.id}'>\r\n                    <span class=\"el-link__inner\">查看轨迹</span>\r\n                </a>\r\n            </p>\r\n        </div>\r\n    `;\r\n\r\n    currentInfoWindow = new AMap.InfoWindow({\r\n        content,\r\n        offset: new AMap.Pixel(0, -30)\r\n    });\r\n\r\n    currentInfoWindow.open(map, position);\r\n};\r\n\r\n\r\n\r\n//const { maxTableHeight, setTableMaxHeight } = useTableSetting({ id: 'userTable', offsetBottom: 92 });\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.main-content{\r\n    overflow: auto;\r\n}\r\n.flex-box{\r\n    display: flex;\r\n\r\n    position: relative;\r\n    justify-content: space-between;\r\n    .tree-card{\r\n\r\n        margin-right: 20px;\r\n        height: 100%;\r\n        overflow: auto;\r\n        border:none;\r\n        box-shadow: none;\r\n    }\r\n\r\n    #map-container {\r\n        padding-left: 10px;\r\n        border-left: 1px solid #dcdfe6;\r\n        position: absolute !important;\r\n        top: 0px;\r\n        left: 270px;\r\n        right: 0;\r\n        bottom: 0;\r\n        width: auto !important;\r\n        height: auto !important;\r\n        background: #fff;\r\n        ::v-deep(.resize-icon) {\r\n            left: 10px;\r\n        }\r\n    }\r\n\r\n}\r\n.table-box {\r\n    display: flex;\r\n    min-height: 300px;\r\n    margin-top: 20px;\r\n    .el-card {\r\n        width: 50%;\r\n        & + .el-card {\r\n            margin-left: 20px;\r\n        }\r\n    }\r\n    .el-pagination  {\r\n        margin-top: 20px ;\r\n        text-align: right;\r\n    }\r\n}\r\n.main-content > .btns{\r\n    margin:10px 0 20px;\r\n}\r\n.search-form{\r\n   ::v-deep(){\r\n    .el-input,.el-select{\r\n        width: 265px !important;\r\n    }\r\n   }\r\n}\r\n</style>\r\n\r\n"],"names":["carTeam","histroyMessages","paginate","list","page","pageSize","total","start","end","realtimeMsgMsg","getRealtimeMsg","updatedCarTeam","totalVehicles","errCount","selected","car","s","deltaLng","deltaLat","_sfc_main","_defineComponent","__props","map","markers","isFirstLoad","mapPolling","realtimeTablePolling","currentInfoWindow","searchForm","reactive","radioOps","ref","carTeamData","handleMapResize","height","mapParentContainer","initMap","mapInstance","Polling","carList","drawMarker","handleSearchCard","handleCarTypeChanged","onMounted","getRealtimeTableList","getHistroyTableList","onUnmounted","histroyTableList","histroyTablePager","realtimeTableList","realtimeTablePager","data","handleDelete","id","index","item","ElMessage","handleSizeChange","rows","action","realTimeTablePager","handleCurrentChange","getIcon","ishighLight","iconPath","treeRef","handleNodeClick","hightLightNode","treeData","handleCarSeleted","map2","lng","err","position","lat","marker","hightLightMarker","extData","carNumber","prevExtData","showInfoWindow","content"],"mappings":"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"}