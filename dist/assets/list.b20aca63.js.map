{"version":3,"file":"list.b20aca63.js","sources":["../../src/views/road/mock.ts","../../src/views/road/list.vue"],"sourcesContent":["export const paths = [\n    [104.054352, 30.58249],\n    [104.055085, 30.582357],\n    [104.05601, 30.582397],\n    [104.056781, 30.582397],\n    [104.057822, 30.582457],\n    [104.058863, 30.58249],\n    [104.059827, 30.58249],\n    [104.060058, 30.582125],\n    [104.059981, 30.580864],\n    [104.060058, 30.580731],\n    [104.059981, 30.580233],\n    [104.06002, 30.579801],\n    [104.059981, 30.579038],\n    [104.06002, 30.578773],\n    [104.060482, 30.578673],\n    [104.060868, 30.578738],\n    [104.061178, 30.578759],\n    [104.06156, 30.578749],\n    [104.062026, 30.578769],\n    [104.062026, 30.578769],\n    [104.062312, 30.578471],\n    [104.062336, 30.578327],\n    [104.0623, 30.578143],\n    [104.062276, 30.578009],\n    [104.062336, 30.577855],\n    [104.062384, 30.57766],\n    [104.062324, 30.5773],\n    [104.062563, 30.577249],\n    [104.062837, 30.577238],\n    [104.063052, 30.577228],\n    [104.063314, 30.577269],\n    [104.063446, 30.577279],\n    [104.06384, 30.577269],\n  ];\n\n\nexport const getPath = () => {\n    return paths\n}\n\nexport const carTeam = [\n    {\n        id: '1',\n        label: '车队1',\n        children:[\n            {\n                id: '1-1',\n                label: '川A12345',\n            },\n            {\n                id: '1-2',\n                label: '川B67890',\n            },\n            {\n                id: '1-3',\n                label: '川C54321',\n            }\n        ]\n    },\n    {\n        id: '2',\n        label: '车队2',\n        children:[\n            {\n                id: '2-1',\n                label: '川D98765',\n            },\n            {\n                id: '2-2',\n                label: '川E43210',\n            }\n        ]\n    }\n]\n\n\nexport const paginate = <T>({ list, page, pageSize }: {list: T[], page: number, pageSize: number}): { data: T[], total: number } => {\n    const total = list.length;\n   // const count = Math.ceil(total / pageSize); // 总页数\n\n    // 计算起始索引和结束索引\n    const start = (page - 1) * pageSize;\n    const end = start + pageSize;\n\n    const data = list.slice(start, end); // 当前页数据\n\n    return {\n        data,\n        total\n    };\n};\n\nexport const leftTable = [\n\n    {id: 1, timeRange: '10分钟', beginTime: '2023-10-01 10:00', lng:104.060482, lat: '30.578673',  endTime: '2023-10-01 10:10', location: '成都成华大道XXXXXX'},\n    {id: 2, timeRange: '20分钟', beginTime: '2023-10-01 10:10', lng:104.06384, lat: '30.577269', endTime: '2023-10-01 10:30', location: '成都成华大道XXXXXX'},\n]\n\nexport const rightTable  = ((paths) => {\n    return paths.map((item, index) => {\n        return {\n            id: index + 1,\n            lng: item[0],\n            lat: item[1],\n            time: `2023-10-01 10:${String(index).padStart(2, '0')}`,\n            speed:  `${index + 1} 米/秒`,\n            location: `成都成华大道XXXXXX ${index + 1}`\n        }\n    });\n\n})(paths)\n","<template>\r\n    <div class=\"main-content\" >\r\n        <section class=\"flex-box\" id=\"mapParentContainer\" style=\"height:750px\">\r\n            <section class=\"left-box\">\r\n\r\n                <el-card header=\"条件查询\"  class=\"tree-card\" >\r\n                    <el-form label-position=\"top\" :model=\"searchForm\">\r\n                        <el-form-item label=\"车牌号：\">\r\n                            <el-input v-model=\"searchForm.carNumber\" placeholder=\"请输入车牌号\">\r\n                            </el-input>\r\n                        </el-form-item>\r\n                        <el-form-item label=\"开始日期：\">\r\n                            <el-date-picker\r\n                                v-model=\"searchForm.beginDate\"\r\n                                type=\"date\"\r\n                                format=\"YYYY-MM-DD\"\r\n                                placeholder=\"开始日期\"\r\n                            />\r\n                        </el-form-item>\r\n                        <el-form-item label=\"结束日期：\">\r\n                            <el-date-picker\r\n                                v-model=\"searchForm.endDate\"\r\n                                type=\"date\"\r\n                                format=\"YYYY-MM-DD\"\r\n                                placeholder=\"开始日期\"\r\n                            />\r\n                        </el-form-item>\r\n                        <el-form-item label=\"选择车辆：\">\r\n                            <el-tree\r\n                                ref=\"treeRef\"\r\n                                :highlight-current=\"true\"\r\n                                node-key=\"id\"\r\n                                :data=\"carTeam\"\r\n                                @node-click=\"handleNodeClick\"\r\n\r\n                            />\r\n                        </el-form-item>\r\n                        <el-form-item style=\"text-align: center;\">\r\n                            <el-button type=\"primary\" @click=\"handleSearch\">查 询</el-button>\r\n                            <el-button  @click=\"handleReset\">重 置</el-button>\r\n                        </el-form-item>\r\n                    </el-form>\r\n\r\n                </el-card>\r\n                <el-card header=\"轨迹回放\"  class=\"bottom-card\">\r\n                    <el-form>\r\n                        <el-form-item label=\"回放进度：\">\r\n                            <div @mousedown=\"handleTouchStart\" style=\"width: 100%;\">\r\n                                <el-slider v-model=\"progress\"  :show-tooltip=\"false\" @change=\"handleProgressChange\"  />\r\n                            </div>\r\n\r\n                        </el-form-item>\r\n                        <el-form-item>\r\n\r\n                            <el-radio-group v-model=\"speed\" @change=\"handleSpeedChange\">\r\n                                <el-radio v-for=\"option in speedRadioOptions\" :key=\"option.value\" :label=\"option.value\">{{ option.label }}</el-radio>\r\n                            </el-radio-group>\r\n                        </el-form-item>\r\n                    </el-form>\r\n                    <section class=\"play-box\">\r\n                        <el-icon v-if=\"!isPlaying || isPaused\"  @click=\"startAnimation()\"><VideoPlay /></el-icon>\r\n                        <el-icon v-else @click=\"pauseAnimation()\"><VideoPause /></el-icon>\r\n                        <el-icon class=\"reset\" @click=\"resumeAnimation()\"><Refresh /></el-icon>\r\n                    </section>\r\n                </el-card>\r\n            </section>\r\n            <div class=\"map-layout\">\r\n                <MyMap @init=\"initMap\" @resize=\"handleMapResize\"></MyMap>\r\n            </div>\r\n        </section>\r\n\r\n        <section class=\" table-box\">\r\n            <el-card header=\"停靠信息\">\r\n                <el-table\r\n                    border\r\n                    id=\"userTable\"\r\n                    class=\"table\"\r\n                    :scrollbar-always-on=\"true\"\r\n                    :data=\"parkTableList\"\r\n                    @row-click =\"handleParkRowClick\"\r\n                    >\r\n                    <el-table-column prop=\"id\" fixed label=\"id\" width=\"130\" />\r\n                    <el-table-column prop=\"timeRange\" label=\"停靠时长\"  width=\"180\" />\r\n                    <el-table-column prop=\"beginTime\" label=\"开始时间\"  width=\"180\" />\r\n                    <el-table-column prop=\"endTime\" label=\"结束时间\" width=\"180\" />\r\n                    <el-table-column prop=\"location\" label=\"位置描述\" width=\"180\">\r\n                    </el-table-column>\r\n\r\n                </el-table>\r\n\r\n                <el-pagination\r\n                    background\r\n                    layout=\"total,sizes,prev, pager, next,jumper\"\r\n                    :total=\"parkTablePager.total\"\r\n                    :current-page=\"parkTablePager.page\"\r\n                    :page-sizes=\"[10, 20, 50, 100]\"\r\n                    :page-size=\"parkTablePager.pageSize\"\r\n                     @size-change=\"e => handleSizeChange('park', e)\"\r\n                    @current-change=\"e => handleCurrentChange('park', e)\"\r\n\r\n                />\r\n            </el-card>\r\n\r\n            <el-card header=\"轨迹信息\">\r\n                <el-table\r\n                    border\r\n                    id=\"userTable\"\r\n                    class=\"table\"\r\n                    :scrollbar-always-on=\"true\"\r\n                    :data=\"locationTableList\"\r\n                    :highlight-current-row=\"true\"\r\n                    @row-click =\"handleLocationRowClick\"\r\n                    >\r\n                    <el-table-column prop=\"id\" fixed label=\"id\" width=\"130\" />\r\n                    <el-table-column prop=\"time\" label=\"时间\"  width=\"180\" />\r\n                    <el-table-column prop=\"speed\" label=\"速度\" width=\"180\" />\r\n                    <el-table-column  label=\"经纬度\" width=\"180\">\r\n                        <template #default=\"scope\" >\r\n                            经度: {{ scope.row.lng }}<br />\r\n                            纬度: {{ scope.row.lat }}\r\n                        </template>\r\n                    </el-table-column>\r\n                    <el-table-column prop=\"location\" label=\"位置描述\" width=\"400\" />\r\n                </el-table>\r\n\r\n                <el-pagination\r\n\r\n                    background\r\n                    layout=\"total,sizes,prev, pager, next,jumper\"\r\n                    :total=\"locationTablePager.total\"\r\n                    :current-page=\"locationTablePager.page\"\r\n                    :page-sizes=\"[10, 20, 50, 100]\"\r\n                    :page-size=\"locationTablePager.pageSize\"\r\n                     @size-change=\"e => handleSizeChange('location', e)\"\r\n                    @current-change=\"e => handleCurrentChange('location', e)\"\r\n\r\n                />\r\n            </el-card>\r\n        </section>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport useTableSetting from '@/hooks/useTableSetting';\r\nimport { ref, onMounted, onUnmounted, reactive, nextTick, watch } from 'vue';\r\nimport { ElMessage, ElTree, FormInstance, ElMessageBox } from 'element-plus';\r\n\r\nimport { getFlatDeepTreeData } from '@/utils/common';\r\nimport { getPath, carTeam as carTeamData, leftTable, rightTable, paginate} from './mock';\r\nimport { Polling } from '@/helper/index';\r\nimport carIcon from '@/assets/images/car.png';\r\nimport  ErrorCarIcon from '@/assets/images/error-car.png';\r\nimport type { CSSProperties } from 'vue'\r\nimport dayjs from '@/helper/dayjs'\r\nimport { VideoPlay, VideoPause, Refresh } from '@element-plus/icons-vue';\r\nimport { useRoute } from 'vue-router';\r\n\r\nconst route = useRoute();\r\nconst queryVid = route.query.vid\r\n\r\n\r\n\r\nconst getIcon = (ishighLight = false) => {\r\n    const iconPath = new URL('../../assets/moving.png', import.meta.url).href;\r\n\r\n    return new AMap.Icon({\r\n        image: iconPath,\r\n        size: new AMap.Size(21.75, 49.5), // 图标尺寸\r\n        imageSize: new AMap.Size(21.75, 49.5) // 渲染时拉伸大小\r\n    });\r\n};\r\nlet currentInfoWindow = null; // 当前信息窗口\r\nconst isPlaying = ref(false); // 是否正在播放动画\r\n\r\ninterface Mark {\r\n  style: CSSProperties\r\n  label: string\r\n}\r\ntype Marks = Record<number, Mark | string>\r\n\r\n// 地图相关全局变量\r\ninterface AMapElements {\r\n    marker?: any;\r\n    polyline?: any;\r\n    passedPolyline?: any;\r\n}\r\ninterface TreeInstance {\r\n    setCurrentKey: (key: string | null) => void;\r\n}\r\nconst treeRef = ref<TreeInstance | null>(null);\r\nconst mapElements = reactive<AMapElements>({});\r\nlet pathData: number[][] = [];\r\nlet map = null;\r\nlet marker: object = {};\r\nconst isPaused = ref(false); // 是否暂停\r\n\r\nconst searchForm = reactive({\r\n    beginDate: '',\r\n    carNumber:'',\r\n    endDate: ''  // 为空表示全部类型\r\n})\r\n\r\nconst treeData = ref([])\r\nconst progress = ref(0); // 回放速度\r\nconst speed = ref(800)\r\nconst speedRadioOptions = [\r\n    { label: 'x1', value: 800 },\r\n    { label: 'x5', value: 400 },\r\n    { label: 'x10', value: 200 },\r\n    { label: 'x20', value:  100},\r\n    { label: 'x50', value: 50 },\r\n  ]\r\n\r\n\r\n\r\nconst carTeam = ref([]); // 车队树数据\r\n\r\nconst getCarTeam = async() => {\r\n    // 接口替换\r\n    //  vid: queryVid.value || / URL参数：vid\r\n    const params = {\r\n        vid: queryVid || ''\r\n    }\r\n    // TO 模拟获取车队数据\r\n   // const carTeamData = await getFlatDeepTreeData();\r\n    carTeam.value = carTeamData   //接口数据绑定到JS内存\r\n\r\n    // 展开树\r\n    if(queryVid) {\r\n        await nextTick(); // 等待DOM更新\r\n        treeRef.value?.setCurrentKey(queryVid);\r\n        handleNodeClick(treeRef.value?.getCurrentNode())\r\n    }\r\n\r\n}\r\n\r\nonMounted(() => {\r\n\r\n    getCarTeam();\r\n\r\n\r\n});\r\n\r\nconst handleMapResize = ({ height }) => {\r\n    const mapParentContainer = document.getElementById('mapParentContainer');\r\n    mapParentContainer.style.height = height +'px'\r\n}\r\nconst initMap = (mapInstance) => { map = mapInstance; }\r\nconst circleStart = ref(null);\r\nconst circleEnd = ref(null);\r\nconst drawMap = (pathData: number[][]) => {\r\n\r\n    // 清理历史轨迹\r\n    if (window.polyline) window.polyline.setMap(null);\r\n    if (window.passedPolyline) window.passedPolyline.setMap(null);\r\n\r\n    // 重新创建轨迹\r\n    window.polyline = new AMap.Polyline({\r\n        map: map,\r\n        path: pathData,\r\n        showDir:true,\r\n        strokeColor: \"#28F\",\r\n        strokeWeight: 6,\r\n    });\r\n    if (pathData.length > 0) {\r\n        circleStart.value = new AMap.Circle({\r\n            center: new AMap.LngLat(pathData[0][0], pathData[0][1]), // 起点坐标\r\n            radius: 10, // 半径（像素）\r\n            strokeColor: \"#179117\", // 描边颜色\r\n            strokeWeight: 2, // 描边线宽\r\n            fillColor: \"#179117\", // 填充绿色\r\n            fillOpacity: 1, // 填充透明度\r\n        });\r\n        map.add(circleStart.value);\r\n    }\r\n\r\n    // 添加终点圆圈\r\n    if (pathData.length > 1) {\r\n        const lastPoint = pathData[pathData.length - 1];\r\n        circleEnd.value = new AMap.Circle({\r\n            center: new AMap.LngLat(lastPoint[0], lastPoint[1]), // 终点坐标\r\n            radius: 10,\r\n            strokeColor: \"#E2231A\",\r\n            strokeWeight: 2,\r\n            fillColor: \"#E2231A\", // 填充红色\r\n            fillOpacity: 1,\r\n        });\r\n        map.add(circleEnd.value);\r\n    }\r\n\r\n\r\n    window.passedPolyline = new AMap.Polyline({\r\n        map: map,\r\n        strokeColor: \"#AF5\",\r\n        strokeWeight: 6,\r\n    });\r\n\r\n    // 重新创建标记物\r\n    window.marker = new AMap.Marker({\r\n        map: map,\r\n        position: pathData[0],\r\n        icon: getIcon(),\r\n        //icon: \"https://a.amap.com/jsapi_demos/static/demo-center-v2/car.png\",\r\n\r\n        offset: new AMap.Pixel(-13, -26),\r\n    });\r\n\r\n    // 重新绑定事件\r\n    window.marker.on('moving', function (e) {\r\n        const currentIndex  = findNearestPointIndex(pathData, e.target.getPosition())\r\n        const progrss = currentIndex / pathData.length * 100\r\n        progress.value = progrss; // 更新进度条\r\n        console.log(progrss)\r\n        isPlaying.value = currentIndex < (pathData.length - 1)\r\n        const passedPath = currentIndex + 1 <= e.passedPath.length ? e.passedPath : [...pathData.slice(0, currentIndex + 1), e.passedPath];\r\n        window.passedPolyline.setPath(passedPath);\r\n        map.setCenter(e.target.getPosition(), true)\r\n\r\n    });\r\n\r\n    map.setFitView();\r\n}\r\nconst startAnimation = function () {\r\n     window.marker.stopMove();\r\n     const currentIndex  = findNearestPointIndex(pathData, window.marker.getPosition())\r\n    if (!pathData || pathData.length === 0) {\r\n        ElMessage.error('请先查询有效轨迹数据');\r\n        return;\r\n    }\r\n    if(isPaused.value ) {\r\n\r\n        window.marker.resumeMove();\r\n        isPaused.value = false; // 恢复播放状态\r\n    } else {\r\n        const remainingPath =  currentIndex < pathData.length - 1 ? pathData.slice(currentIndex): pathData; // 获取剩余路径\r\n        window.marker.moveAlong(remainingPath, {\r\n            duration: speed.value , // 使用 speedMap 获取对应速度的持续时间\r\n            autoRotation: true,\r\n        });\r\n    }\r\n\r\n};\r\nconst pauseAnimation = function () {\r\n    isPaused.value = true; // 设置为非播放状态\r\n    window.marker.pauseMove();\r\n};\r\n\r\nconst resumeAnimation = function () {\r\n\r\n    window.marker.stopMove();\r\n    window.\r\n    window.marker.setPosition(pathData[0]);\r\n    // 移除已行驶轨迹线\r\n\r\n    if(window.passedPolyline) {\r\n        window.passedPolyline.setPath(pathData.slice(0, 1));\r\n    }\r\n\r\n    progress.value = 0; // 重置进度条\r\n    isPlaying.value = false; // 恢复播放状态\r\n    isPaused.value = false; // 恢复播放状态\r\n    map.setCenter(pathData[0], true); // 设置地图中心点为起始位置\r\n    // window.marker.moveAlong(pathData, {\r\n    //     duration: speed.value , // 使用 speedMap 获取对应速度的持续时间\r\n    //     autoRotation: true,\r\n    // });\r\n};\r\n\r\nconst stopAnimation = function () {\r\n    window.marker.stopMove();\r\n};\r\n\r\n\r\nconst handleSearchCar = () => {\r\n\r\n}\r\n\r\n\r\nconst handleCarTypeChanged = () => {\r\n    // TODO , 返回布尔值, 如存在，则高亮该车辆\r\n\r\n    // const params = { carNumber: searchForm.carNumber  }\r\n    //  const hasTarget: boolean =  await https(params)\r\n    // if(hasTarget) {\r\n    //     hightLightNode(searchForm.carNumber);\r\n    // }\r\n}\r\n\r\n\r\n\r\n/**\r\n * 清理地图上的所有轨迹元素和标记\r\n */\r\nconst clearMapElements = () => {\r\n    // 停止当前动画\r\n    if (window.marker && window.marker.stopMove) {\r\n        window.marker.stopMove();\r\n    }\r\n\r\n    // 移除轨迹线\r\n    if (window.polyline) {\r\n        window.polyline.setMap(null);\r\n        window.polyline = null;\r\n    }\r\n\r\n    // 移除已行驶轨迹线\r\n    if (window.passedPolyline) {\r\n        window.passedPolyline.setMap(null);\r\n        window.passedPolyline = null;\r\n    }\r\n\r\n    // 移除标记物\r\n    if (window.marker) {\r\n        window.marker.setMap(null);\r\n        window.marker = null;\r\n    }\r\n    if(parkMarkers.value && parkMarkers.value.length) {\r\n        parkMarkers.value.forEach(marker => {\r\n            marker.setMap(null);\r\n        });\r\n\r\n        parkMarkers.value = [];\r\n    }\r\n    if(currentInfoWindow) {\r\n        currentInfoWindow.close();\r\n        currentInfoWindow = null;\r\n    }\r\n\r\n};\r\n\r\n\r\nconst handleReset = () => {\r\n    searchForm.beginDate = '';\r\n    searchForm.endDate = '';\r\n    searchForm.carNumber = '';\r\n    clearMapElements(); // 清除地图上的所有元素\r\n    pathData = []; // 清空路径数据\r\n     // 清除树组件的选中状态\r\n    if (treeRef.value && treeRef.value.setCurrentKey) {\r\n        treeRef.value.setCurrentKey(null); // 设置为null来清除选中状态\r\n    }\r\n\r\n}\r\n\r\n\r\n// 查询轨迹\r\nconst handleSearch = async ():void => {\r\n    //TODO 调用接口查询轨迹数据\r\n    if (!searchForm.beginDate ) {\r\n        ElMessage.error('请选择开始日期');\r\n        return;\r\n    }\r\n    if (!searchForm.carNumber ) {\r\n        ElMessage.error('请选择车辆');\r\n        return;\r\n    }\r\n    // 查询条件参数组装\r\n    const params = {\r\n        beginDate: searchForm.beginDate,\r\n        endDate: searchForm.endDate || dayjs().format('YYYY-MM-DD'),\r\n        carNumber: searchForm.carNumber\r\n    };\r\n    // 获取新数据\r\n    try {\r\n        const data = await getPath(params);\r\n        pathData = data; // 更新全局路径数据\r\n        clearMapElements();\r\n        drawMap(pathData); // 重绘地图元素\r\n    } catch (error) {\r\n        ElMessage.error('轨迹数据查询失败');\r\n    }\r\n    parkTablePager.value.page = 1; // 重置停靠表分页\r\n    locationTablePager.value.page = 1; // 重置历史轨迹分页\r\n    getParkTableList()\r\n    getLocationTableList()\r\n}\r\nconst handleNodeClick = (data: { label: string , children: any[] } )=> {\r\n    const isCarNode = !(data.children && data.children.length) // 是否选中的是车辆\r\n    searchForm.carNumber = isCarNode ? data.label : '' // 如果是车辆节点，则设置车牌号;\r\n\r\n};\r\n\r\n\r\nwatch(speed, (newSpeed) => {\r\n    // if (window.marker) {\r\n    //     debugger;\r\n    //     const currentPosition = window.marker.getPosition();\r\n    //     const currentIndex = pathData.findIndex((point) =>\r\n    //         point[0] === currentPosition.lng && point[1] === currentPosition.lat\r\n    //     );\r\n    //     if (currentIndex !== -1) {\r\n    //         const remainingPath = pathData.slice(currentIndex);\r\n    //         window.marker.stopMove();\r\n    //         window.marker.setPosition(remainingPath[0]);\r\n    //         window.marker.moveAlong(remainingPath, {\r\n    //             duration: 101 - newSpeed,\r\n    //             autoRotation: true,\r\n    //         });\r\n    //     }\r\n    // }\r\n});\r\n\r\nconst handleSpeedChange = (e) => {\r\n\r\n   if (window.marker && isPlaying.value  && !isPaused.value ) {\r\n        const currentPosition = window.marker.getPosition();\r\n         console.log(currentPosition)\r\n        const currentIndex  = findNearestPointIndex(pathData, currentPosition);\r\n         console.log(currentIndex)\r\n        if (currentIndex !== -1 && currentIndex < pathData.length - 1 ) {\r\n            const remainingPath = pathData.slice(currentIndex);\r\n            window.marker.stopMove();\r\n            window.marker.setPosition(remainingPath[0]);\r\n            window.marker.moveAlong(remainingPath, {\r\n                duration: speed.value,\r\n                autoRotation: true,\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nconst handleProgressChange = (val) => {\r\n    console.log(val)\r\n    if(!pathData || !pathData.length) return\r\n    if (window.marker) {\r\n        const currentIndex = Math.floor(progress.value / 100 * pathData.length);\r\n        const remainingPath = pathData.slice(currentIndex);\r\n      //  isPlaying.value &&\r\n        map.setCenter(remainingPath[0], true)\r\n        window.marker.setPosition(remainingPath[0]);\r\n        window.passedPolyline.setPath(pathData.slice(0, currentIndex + 1));\r\n        if(currentIndex >= pathData.length - 1) {\r\n            progress.value = 100; // 如果点击的点是最后一个点，则设置进度为100%\r\n            isPlaying.value = false; // 停止播放状态\r\n            isPaused.value = false; // 停止暂停状态\r\n            return;\r\n        }\r\n        if (isPlaying.value && !isPaused.value && currentIndex < pathData.length - 1) {\r\n            window.marker.stopMove();\r\n            window.marker.setPosition(remainingPath[0]);\r\n\r\n            window.marker.moveAlong(remainingPath, {\r\n                duration: speed.value,\r\n                autoRotation: true,\r\n            });\r\n\r\n        }\r\n    }\r\n}\r\n\r\nconst handleTouchStart = e => {\r\n    // 在触摸开始时暂停动画\r\n    window.marker.stopMove();\r\n}\r\n\r\n\r\n// 辅助函数：查找最近路径点\r\nfunction findNearestPointIndex(path: number[][], position: any) {\r\n     // 参数校验\r\n     if (!Array.isArray(path) || path.length === 0 || !position?.lng || !position?.lat) {\r\n        return 0; // 基本参数异常时默认返回第一个点\r\n    }\r\n\r\n    let minDiff = Infinity;\r\n    let nearestIndex = 0;\r\n\r\n    for (let i = 0; i < path.length; i++) {\r\n        const [lng, lat] = path[i];\r\n        // 计算经纬度差值的绝对值之和（不转换实际距离）\r\n        const diff = Math.abs(lng - position.lng) + Math.abs(lat - position.lat);\r\n\r\n        if (diff < minDiff) {\r\n            minDiff = diff;\r\n            nearestIndex = i;\r\n        }\r\n    }\r\n\r\n    return nearestIndex;\r\n}\r\n\r\n\r\n\r\n\r\nconst parkTableList = ref<object[]>([])\r\n\r\nconst parkTablePager = ref({\r\n    page: 1,\r\n    pageSize: 10,\r\n    total: 0,\r\n})\r\n\r\nconst locationTableList = ref<object[]>([])\r\n\r\nconst locationTablePager = ref({\r\n    page: 1,\r\n    pageSize: 10,\r\n    total: 0,\r\n})\r\n\r\nconst getParkTableList = async() => {\r\n    // TODO  停靠表  接口需要返回 list类型的data字段  和 总数据条数count字段，用于前端分页\r\n    // 接口入参params\r\n    const params = {\r\n        ...searchForm,\r\n        page: parkTablePager.value.page,\r\n        pageSize: parkTablePager.value.pageSize,\r\n\r\n    }\r\n    // 接口替换\r\n    const { data, total} = await paginate({\r\n        page: parkTablePager.value.page,\r\n        pageSize: parkTablePager.value.pageSize,\r\n        list: leftTable,\r\n    })\r\n\r\n    parkTableList.value = data;\r\n    parkTablePager.value.total = total;\r\n    drawMarkers()\r\n}\r\n\r\nconst getLocationTableList = async() => {\r\n    // TODO  历史轨迹  接口需要返回 list类型的data字段  和 总数据条数count字段，用于前端分页\r\n    // 接口入参params\r\n    console.log(rightTable)\r\n    const params = {\r\n        ...searchForm,\r\n        page: locationTablePager.value.page,\r\n        pageSize: locationTablePager.value.pageSize,\r\n\r\n    }\r\n\r\n    // 接口替换\r\n    const { data, total} = await paginate({\r\n        page: locationTablePager.value.page,\r\n        pageSize: locationTablePager.value.pageSize,\r\n        list: rightTable,\r\n    })\r\n\r\n\r\n    locationTableList.value = data;\r\n    locationTablePager.value.total = total;\r\n}\r\n\r\n\r\n\r\nconst handleSizeChange = (action: string, rows: number) => {\r\n    if(action === 'park') {\r\n        parkTablePager.value.page = 1;\r\n        parkTablePager.value.pageSize = rows;\r\n        getParkTableList()\r\n    } else {\r\n        locationTablePager.value.page = 1;\r\n        locationTablePager.value.pageSize = rows;\r\n    }\r\n\r\n};\r\nconst handleCurrentChange = (action: string, page: number) => {\r\n    if(action === 'park') {\r\n        parkTablePager.value.page = page;\r\n        getParkTableList()\r\n    } else {\r\n        locationTablePager.value.page = page;\r\n        getLocationTableList();\r\n    }\r\n};\r\n\r\n//  markers.forEach(function(marker) {\r\n//         new AMap.Marker({\r\n//             map: map,\r\n//             icon: marker.icon,\r\n//             position: [marker.position[0], marker.position[1]],\r\n//             offset: new AMap.Pixel(-13, -30)\r\n//         });\r\n//     });\r\nconst showInfoWindow = (marker) => {\r\n    const extData = marker.getExtData();\r\n    const position = marker.getPosition();\r\n\r\n    const content = `\r\n        <div class=\"info-window\">\r\n            <p><label>id：</label>${extData.id}</p>\r\n            <p><label>停靠时长：</label>${position.lng}, ${position.lat}</p>\r\n            <p><label>开始时间</label>${extData.beginTime || '无'}</p>\r\n            <p><label>结束时间</label>${extData.endTime || '无'}</p>\r\n            <p><label>位置信息：</label>${extData.location || '无'}</p>\r\n\r\n        </div>\r\n    `;\r\n\r\n    currentInfoWindow = new AMap.InfoWindow({\r\n        content,\r\n        offset: new AMap.Pixel(0, -30)\r\n    });\r\n\r\n    currentInfoWindow.open(map, position);\r\n};\r\n\r\nconst parkMarkers = ref<object[]>([]);\r\n\r\nconst blurIcon = 'https://a.amap.com/jsapi_demos/static/demo-center/icons/poi-marker-default.png'\r\nconst redIcon = 'https://a.amap.com/jsapi_demos/static/demo-center/icons/poi-marker-red.png'\r\n\r\n\r\nconst drawMarkers = () => {\r\n\r\n\r\n    parkTableList.value.forEach(item => {\r\n        const marker = new AMap.Marker({\r\n\r\n            map: map,\r\n            icon: new AMap.Icon({\r\n                image: blurIcon,\r\n                size: new AMap.Size(25, 34),\r\n                imageSize: new AMap.Size(25, 34),\r\n            }), // 使用统一的图标\r\n            extData: item,\r\n            offset: new AMap.Pixel(-13, -30),\r\n            position: [item.lng, item.lat],\r\n        });\r\n\r\n        // 添加点击事件\r\n        marker.on('click', () => handleMarkerClick(marker));\r\n        parkMarkers.value.push(marker);\r\n    });\r\n\r\n}\r\nconst hightLightMarker = ref(null); // 用于存储高亮的 Marker\r\nconst handleMarkerClick = currentMarker => {\r\n     // 清除所有高亮状态\r\n    const currentMarkerId = currentMarker.getExtData().id;\r\n    parkMarkers.value.forEach(marker => {\r\n        const { id } = marker.getExtData();\r\n        console.log('marker id', id, currentMarker.id)\r\n        if(id === currentMarkerId) {\r\n            console.log('当前点击的marker', marker)\r\n            if(hightLightMarker.value && hightLightMarker.value.getExtData().id === id) {\r\n\r\n                currentInfoWindow.close();\r\n                currentInfoWindow = null;\r\n                hightLightMarker.value = null;\r\n                marker.setIcon(new AMap.Icon({\r\n                    image: blurIcon,\r\n                    size: new AMap.Size(25, 34),\r\n                    imageSize: new AMap.Size(25, 34),\r\n                })); // 设置高亮图标\r\n            } else {\r\n                const position = marker.getPosition();\r\n                marker.setIcon(new AMap.Icon({\r\n                    image: redIcon,\r\n                    size: new AMap.Size(25, 34),\r\n                    imageSize: new AMap.Size(25, 34),\r\n                })); // 设置高亮图标\r\n                map.panTo(position,500); // 移动地图中心到车辆位置\r\n                hightLightMarker.value = marker;\r\n                setTimeout(() => {\r\n                    showInfoWindow(marker);\r\n                }, 500);\r\n\r\n            }\r\n\r\n        } else {\r\n\r\n            marker.setIcon(new AMap.Icon({\r\n                image: blurIcon,\r\n                size: new AMap.Size(25, 34),\r\n                imageSize: new AMap.Size(25, 34),\r\n            })); // 恢复默认图标\r\n        }\r\n    });\r\n     // 关闭现有的信息窗口\r\n\r\n\r\n    // // 查找并高亮匹配的 Marker\r\n    // for (const id in parkMarkers) {\r\n    //     const marker = markers[id];\r\n    //     const extData = marker.getExtData();\r\n    //     if (extData && extData.carNumber === carNumber) {\r\n    //         // 设置高亮图标\r\n    //         if (hightLightMarker.value) {\r\n    //             const prevExtData = hightLightMarker.value.getExtData();\r\n    //             if (prevExtData.carNumber && prevExtData.carNumber === carNumber && currentInfoWindow) {\r\n    //                 currentInfoWindow.close();\r\n    //                 currentInfoWindow = null;\r\n    //                 hightLightMarker.value = null;\r\n    //                 // 如果当前高亮的就是这个节点，则不做任何操作\r\n    //                 return;\r\n    //             }\r\n    //         }\r\n    //         const position = marker.getPosition();\r\n    //         marker.setIcon(getIcon(true));\r\n    //         map.panTo(position,500); // 移动地图中心到车辆位置\r\n    //         hightLightMarker.value = marker;\r\n    //         setTimeout(() => {\r\n    //             showInfoWindow(marker);\r\n    //         }, 500);\r\n\r\n    //         break;\r\n    //     }\r\n    // }\r\n}\r\n\r\nconst handleParkRowClick = ({ id }) => {\r\n\r\n\r\n    // 找到对应的标记\r\n    const targetMarker = parkMarkers.value.find(marker => id === marker.getExtData().id);\r\n    console.log('点击了停靠信息行', targetMarker);\r\n    if (targetMarker) {\r\n        // 模拟点击标记\r\n        handleMarkerClick(targetMarker);\r\n\r\n    }\r\n}\r\n\r\nconst handleLocationRowClick = row => {\r\n    const { lat, lng } = row;\r\n    if (window.marker) {\r\n        const currentIndex = pathData.findIndex(point =>\r\n            point[0] === lng && point[1] === lat\r\n        );\r\n        const remainingPath = pathData.slice(currentIndex);\r\n      //  isPlaying.value &&\r\n        map.setCenter(remainingPath[0], true)\r\n        window.marker.setPosition(remainingPath[0]);\r\n        window.passedPolyline.setPath(pathData.slice(0, currentIndex + 1));\r\n        if (isPlaying.value && !isPaused.value ) {\r\n            window.marker.stopMove();\r\n\r\n            window.marker.setPosition(remainingPath[0]);\r\n            if(currentIndex < pathData.length - 1) {\r\n                window.marker.moveAlong(remainingPath, {\r\n                    duration: speed.value,\r\n                    autoRotation: true,\r\n                });\r\n            } else {\r\n                progress.value = 100; // 如果点击的点是最后一个点，则设置进度为100%\r\n                isPlaying.value = false; // 停止播放状态\r\n                isPaused.value = false; // 停止暂停状态\r\n            }\r\n\r\n\r\n        }\r\n    }\r\n}\r\n\r\n\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.el-tree {\r\n    width: 100%;\r\n}\r\n.main-content{\r\n    overflow: auto;\r\n}\r\n.flex-box{\r\n    display: flex;\r\n\r\n    position: relative;\r\n    justify-content: space-between;\r\n    .left-box {\r\n        margin-right: 20px;\r\n        display: flex;\r\n\r\n        flex-direction: column;\r\n\r\n        height: 100%;\r\n        .tree-card{\r\n\r\n            flex: 1;\r\n\r\n            overflow: auto;\r\n        }\r\n        .el-card {\r\n            border:none;\r\n            box-shadow: none;\r\n        }\r\n        .bottom-card {\r\n            flex-shrink: 0;\r\n            margin-top: 20px;\r\n        }\r\n        .play-box {\r\n            padding: 5px;\r\n            border: 1px solid var(--el-color-primary);\r\n            border-radius: 25px;\r\n            margin-top: 20px;\r\n            display: inline-flex;\r\n            float: right;\r\n            text-align: right;\r\n            font-size: 25px;\r\n            color: var(--el-color-primary);\r\n            .el-icon {\r\n                cursor: pointer;\r\n                margin-left: 10px;\r\n                &:hover {\r\n                    opacity: 0.7;\r\n                }\r\n            }\r\n            // .reset {\r\n            //    color: var(--el-color-danger);\r\n            // }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    #map-container {\r\n        padding-left: 10px;\r\n        border-left: 1px solid #dcdfe6;\r\n        position: absolute !important;\r\n        top: 0px;\r\n        left: 270px;\r\n        right: 0;\r\n        bottom: 0;\r\n        width: auto !important;\r\n        height: auto !important;\r\n        background: #fff;\r\n            ::v-deep(.resize-icon) {\r\n            left: 10px;\r\n        }\r\n    }\r\n\r\n}\r\n\r\n.tool-box {\r\n    position: absolute;\r\n    right: 10px;\r\n    bottom: 10px;\r\n    border-radius: 5px;\r\n    background: #fff;\r\n    padding: 0 10px 10px;\r\n    .input-item {\r\n        margin-top: 10px;\r\n    }\r\n}\r\n.table-box {\r\n    display: flex;\r\n    min-height: 300px;\r\n    margin-top: 20px;\r\n    .el-card {\r\n        width: 50%;\r\n        & + .el-card {\r\n            margin-left: 20px;\r\n        }\r\n    }\r\n    .el-pagination  {\r\n        margin-top: 20px ;\r\n        text-align: right;\r\n    }\r\n}\r\n.main-content > .btns{\r\n    margin:10px 0 20px;\r\n}\r\n.search-form{\r\n   ::v-deep(){\r\n    .el-input,.el-select{\r\n        width: 265px !important;\r\n    }\r\n   }\r\n}\r\n\r\n.el-radio {\r\n    margin-right: 10px;\r\n}\r\n\r\n</style>\r\n\r\n"],"names":["paths","getPath","carTeam","paginate","list","page","pageSize","total","start","end","leftTable","rightTable","item","index","_sfc_main","_defineComponent","__props","queryVid","getIcon","ishighLight","iconPath","currentInfoWindow","ref","treeRef","reactive","pathData","map","isPaused","searchForm","progress","speed","speedRadioOptions","getCarTeam","carTeamData","nextTick","_a","handleNodeClick","_b","onMounted","handleMapResize","height","mapParentContainer","initMap","mapInstance","circleStart","circleEnd","drawMap","pathData2","lastPoint","currentIndex","findNearestPointIndex","progrss","isPlaying","passedPath","startAnimation","ElMessage","remainingPath","pauseAnimation","resumeAnimation","clearMapElements","parkMarkers","marker2","handleReset","handleSearch","dayjs","params","parkTablePager","locationTablePager","getParkTableList","getLocationTableList","data","isCarNode","watch","newSpeed","handleSpeedChange","e","currentPosition","handleProgressChange","val","handleTouchStart","path","position","minDiff","nearestIndex","i","lng","lat","diff","parkTableList","locationTableList","drawMarkers","handleSizeChange","action","rows","handleCurrentChange","showInfoWindow","extData","content","blurIcon","marker","handleMarkerClick","hightLightMarker","currentMarker","currentMarkerId","id","redIcon","handleParkRowClick","targetMarker","handleLocationRowClick","row","point"],"mappings":"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"}