{"version":3,"file":"list.05da1495.js","sources":["../../src/views/Project/mock.ts","../../node_modules/dayjs/plugin/isToday.js","../../node_modules/dayjs/plugin/isYesterday.js","../../node_modules/dayjs/locale/zh-cn.js","../../src/helper/dayjs.ts","../../src/helper/index.ts","../../src/views/Project/list.vue"],"sourcesContent":["export const carTeam = [\r\n    {\r\n        id: '1',\r\n        label: '车队1',\r\n        children:[\r\n            {\r\n                id: '1-1',\r\n                label: '川A12345',\r\n            },\r\n            {\r\n                id: '1-2',\r\n                label: '川B67890',\r\n            },\r\n            {\r\n                id: '1-3',\r\n                label: '川C54321',\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: '2',\r\n        label: '车队2',\r\n        children:[\r\n            {\r\n                id: '2-1',\r\n                label: '川D98765',\r\n            },\r\n            {\r\n                id: '2-2',\r\n                label: '川E43210',\r\n            }\r\n        ]\r\n    }\r\n]\r\n\r\n\r\n\r\nexport const histroyMessages = [\r\n    {\r\n        id: '1',\r\n        carNumber: '川A12345',\r\n        time: '2023-10-01 10:00',\r\n        location: '成都',\r\n        content: '车辆已到达目的地',\r\n        type: 'info'\r\n    },\r\n    {\r\n        id: '2',\r\n        carNumber: '川B67890',\r\n        time: '2023-10-01 11:00',\r\n        location: '重庆',\r\n        content: '车辆正在途中，预计12点到达',\r\n        type: 'info'\r\n    },\r\n    {\r\n        id: '3',\r\n        carNumber: '川C54321',\r\n        time: '2023-10-01 12:00',\r\n        location: '西安',\r\n        content: '车辆发生故障，已联系维修人员',\r\n        type: 'danger'\r\n    },\r\n    {\r\n        id: '4',\r\n        carNumber: '川A12345',\r\n        time: '2023-10-01 10:00',\r\n        location: '成都',\r\n        content: '车辆已到达目的地',\r\n        type: 'info'\r\n    },\r\n    {\r\n        id: '5',\r\n        carNumber: '川B67890',\r\n        time: '2023-10-01 11:00',\r\n        location: '重庆',\r\n        content: '车辆正在途中，预计12点到达',\r\n        type: 'info'\r\n    },\r\n    {\r\n        id: '6',\r\n        carNumber: '川C54321',\r\n        time: '2023-10-01 12:00',\r\n        location: '西安',\r\n        content: '车辆发生故障，已联系维修人员',\r\n        type: 'danger'\r\n    },\r\n    {\r\n        id: '7',\r\n        carNumber: '川A12345',\r\n        time: '2023-10-01 10:00',\r\n        location: '成都',\r\n        content: '车辆已到达目的地',\r\n        type: 'info'\r\n    },\r\n    {\r\n        id: '8',\r\n        carNumber: '川B67890',\r\n        time: '2023-10-01 11:00',\r\n        location: '重庆',\r\n        content: '车辆正在途中，预计12点到达',\r\n        type: 'info'\r\n    },\r\n    {\r\n        id: '9',\r\n        carNumber: '川C54321',\r\n        time: '2023-10-01 12:00',\r\n        location: '西安',\r\n        content: '车辆发生故障，已联系维修人员',\r\n        type: 'danger'\r\n    },\r\n    {\r\n        id: '10',\r\n        carNumber: '川B67890',\r\n        time: '2023-10-01 11:00',\r\n        location: '重庆',\r\n        content: '车辆正在途中，预计12点到达',\r\n        type: 'info'\r\n    },\r\n    {\r\n        id: '11',\r\n        carNumber: '川C54321',\r\n        time: '2023-10-01 12:00',\r\n        location: '西安',\r\n        content: '车辆发生故障，已联系维修人员',\r\n        type: 'danger'\r\n    }\r\n]\r\n\r\n/**\r\n * 模拟前端分页方法\r\n * @param list 原始数据数组\r\n * @param page 当前页码（从 1 开始）\r\n * @param pageSize 每页条数\r\n * @returns { data: [], count: number }\r\n */\r\nexport const paginate = <T>({ list, page, pageSize }: {list: T[], page: number, pageSize: number}): { data: T[], total: number } => {\r\n    const total = list.length;\r\n   // const count = Math.ceil(total / pageSize); // 总页数\r\n\r\n    // 计算起始索引和结束索引\r\n    const start = (page - 1) * pageSize;\r\n    const end = start + pageSize;\r\n\r\n    const data = list.slice(start, end); // 当前页数据\r\n\r\n    return {\r\n        data,\r\n        total\r\n    };\r\n};\r\n\r\n\r\n\r\n\r\nexport const realtimeMsgMsg = [\r\n    {\r\n        id: '1-1',\r\n        carNumber: '川A12345',\r\n        time: '2023-10-01 10:00',\r\n        lat:   30.5728,\r\n        lng: 104.0668,\r\n        location: '成都',\r\n        errMsg: '车辆发生故障，已联系维修人员',\r\n\r\n    },\r\n    {\r\n        id: '1-2',\r\n        carNumber: '川B67890',\r\n        lat:   30,\r\n        lng: 103,\r\n        time: '2023-10-01 10:00',\r\n        location: '成都',\r\n        errMsg: '车辆发生故障，已联系维修人员',\r\n    },\r\n    {\r\n        id: '1-3',\r\n        carNumber: '川C54321',\r\n        lat:   31.5728,\r\n        lng: 105.0668,\r\n        time: '2023-10-01 10:00',\r\n        location: '成都',\r\n    },\r\n    {\r\n        id: '2-1',\r\n        carNumber: '川D98765',\r\n        lat:   32.5728,\r\n        lng: 106.0668,\r\n        time: '2023-10-01 10:00',\r\n        location: '成都',\r\n        errMsg: '车辆发生故障，已联系维修人员',\r\n    },\r\n    {\r\n        id: '2-2',\r\n        carNumber: '川E43210',\r\n        lat:   33.5728,\r\n        lng: 107.0668,\r\n        time: '2023-10-01 10:00',\r\n        location: '成都',\r\n\r\n    }\r\n]\r\n\r\nexport const getRealtimeMsg =  () => {\r\n    const updatedCarTeam = JSON.parse(JSON.stringify(realtimeMsgMsg)); // 深拷贝避免污染原数据\r\n    const totalVehicles = updatedCarTeam.length;\r\n    const errCount = Math.floor(totalVehicles / 3); // 约 1/3 的车辆添加异常信息\r\n\r\n    // 打乱数组并选出要操作的车辆\r\n    const shuffled = [...updatedCarTeam].sort(() => Math.random() - 0.5);\r\n    const selected = shuffled.slice(0, errCount);\r\n\r\n    // 为选中的车辆添加 errMsg 并随机改变经纬度\r\n    updatedCarTeam.forEach((car) => {\r\n      if (selected.some((s) => s.id === car.id)) {\r\n        car.errMsg = '车辆发生故障，已联系维修人员';\r\n        car.type = 'danger'; // 标记为异常车辆\r\n        // 随机微调经纬度（±0.001 范围内）\r\n        const deltaLng = (Math.random() - 0.5) * 0.2; // ±0.001\r\n        const deltaLat = (Math.random() - 0.5) * 0.2;\r\n\r\n        car.lng += deltaLng;\r\n        car.lat += deltaLat;\r\n      } else {\r\n        car.errMsg = ''; // 没有异常信息的车辆清空 errMsg\r\n      }\r\n    });\r\n\r\n    return updatedCarTeam;\r\n  };\r\n//车牌，时间，位置描述，消息内容，消息类型\r\n","!function(e,o){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=o():\"function\"==typeof define&&define.amd?define(o):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_plugin_isToday=o()}(this,(function(){\"use strict\";return function(e,o,t){o.prototype.isToday=function(){var e=\"YYYY-MM-DD\",o=t();return this.format(e)===o.format(e)}}}));","!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_plugin_isYesterday=t()}(this,(function(){\"use strict\";return function(e,t,n){t.prototype.isYesterday=function(){var e=\"YYYY-MM-DD\",t=n().subtract(1,\"day\");return this.format(e)===t.format(e)}}}));","!function(e,_){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=_(require(\"dayjs\")):\"function\"==typeof define&&define.amd?define([\"dayjs\"],_):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_locale_zh_cn=_(e.dayjs)}(this,(function(e){\"use strict\";function _(e){return e&&\"object\"==typeof e&&\"default\"in e?e:{default:e}}var t=_(e),d={name:\"zh-cn\",weekdays:\"星期日_星期一_星期二_星期三_星期四_星期五_星期六\".split(\"_\"),weekdaysShort:\"周日_周一_周二_周三_周四_周五_周六\".split(\"_\"),weekdaysMin:\"日_一_二_三_四_五_六\".split(\"_\"),months:\"一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月\".split(\"_\"),monthsShort:\"1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月\".split(\"_\"),ordinal:function(e,_){return\"W\"===_?e+\"周\":e+\"日\"},weekStart:1,yearStart:4,formats:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"YYYY/MM/DD\",LL:\"YYYY年M月D日\",LLL:\"YYYY年M月D日Ah点mm分\",LLLL:\"YYYY年M月D日ddddAh点mm分\",l:\"YYYY/M/D\",ll:\"YYYY年M月D日\",lll:\"YYYY年M月D日 HH:mm\",llll:\"YYYY年M月D日dddd HH:mm\"},relativeTime:{future:\"%s内\",past:\"%s前\",s:\"几秒\",m:\"1 分钟\",mm:\"%d 分钟\",h:\"1 小时\",hh:\"%d 小时\",d:\"1 天\",dd:\"%d 天\",M:\"1 个月\",MM:\"%d 个月\",y:\"1 年\",yy:\"%d 年\"},meridiem:function(e,_){var t=100*e+_;return t<600?\"凌晨\":t<900?\"早上\":t<1100?\"上午\":t<1300?\"中午\":t<1800?\"下午\":\"晚上\"}};return t.default.locale(d,null,!0),d}));","import dayjs from 'dayjs';\r\nimport isToday from 'dayjs/plugin/isToday';\r\nimport isYesterday from 'dayjs/plugin/isYesterday';\r\nimport customParseFormat from 'dayjs/plugin/customParseFormat';\r\nimport 'dayjs/locale/zh-cn';\r\n\r\ndayjs.extend(isToday);\r\ndayjs.extend(isYesterday);\r\ndayjs.extend(customParseFormat);\r\ndayjs.locale('zh-cn');\r\n\r\nexport default dayjs;\r\n","import dayjs from './dayjs';\r\nimport Cookie from 'js-cookie';\r\n\r\nexport const setToken = (token: string): void => {\r\n    Cookie.set(\r\n        'token',\r\n        token,\r\n        {\r\n            expires: new Date(new Date().getTime() + 120 * 60 * 1000)\r\n        }\r\n    );\r\n};\r\n\r\n\r\nexport const getColrByApi = (aqiVal: number): string | undefined => {\r\n    if (aqiVal >= 0 && aqiVal < 20) {\r\n        return 'background-color:green';\r\n    } else if (aqiVal >= 20 && aqiVal < 100) {\r\n        const bili = (aqiVal - 20) / 100 * 100;\r\n        const one = (255 + 255) / 100;\r\n        let r = 0;\r\n        let g = 0;\r\n        let b = 0;\r\n        if (bili < 50) {\r\n            // 比例小于50的时候红色是越来越多的,直到红色为255时(红+绿)变为黄色.\r\n            r = one * bili;\r\n            g = 128;\r\n        }\r\n        if (bili >= 50) {\r\n            // 比例大于50的时候绿色是越来越少的,直到0 变为纯红\r\n            g = 255 - (bili - 50) * one;\r\n            r = 255;\r\n        }\r\n        r = parseInt(r, 10); // 取整\r\n        g = parseInt(g, 10); // 取整\r\n        b = parseInt(b, 10); // 取整\r\n        return `background-color:rgb(${r},${g},${b})`;\r\n    } else if (aqiVal >= 100) {\r\n        return 'background-color:red';\r\n    }\r\n    return undefined;\r\n};\r\n\r\nexport const getCurrentTime = () => {\r\n    return dayjs().format('YYYY-MM-DD HH:MM:ss');\r\n};\r\n\r\nexport const getLevelByMesure = ( mesure: number) => {\r\n    if (mesure <= 50) {\r\n        return {\r\n            color: '#07A872',\r\n            level: '优'\r\n        };\r\n    } else if (mesure <= 100) {\r\n        return {\r\n            color: '#F5BA18',\r\n            level: '良'\r\n        };\r\n    } else if (mesure <= 150) {\r\n        return {\r\n            color: '#F57E18',\r\n            level: '轻度污染'\r\n        };\r\n    } else if (mesure <= 200) {\r\n        return {\r\n            color: '#DA1811',\r\n            level: '中度污染'\r\n        };\r\n    } else if (mesure <= 300) {\r\n        return {\r\n            color: '#792BBB',\r\n            level: '重度污染'\r\n        };\r\n    } else if (mesure > 300) {\r\n        return {\r\n            color: '#A21A10',\r\n            level: '严重污染'\r\n        };\r\n    }\r\n};\r\n\r\n\r\n// 获取路径中的字段\r\nexport function GetQueryString(name: string): string | null {\r\n    // let allQuery = this.$route.query;\r\n    // return allQuery[name] ? allQuery[name] :null\r\n    const reg = new RegExp('(^|&)' + name + '=([^&]*)(&|$)');\r\n    const search = window.location.search ? window.location.search : `?${location.href.split('?')[1]}`;\r\n    const r = search.substr(1).match(reg);\r\n    if (r != null) {\r\n        return unescape(r[2]);\r\n    }\r\n    return null;\r\n}\r\n\r\n// 获取风向\r\nexport const getWindDirection = (num: number) => {\r\n    let result = '';\r\n    if(+num === 0 || +num === 360) {\r\n        result = '北风';\r\n    }else if (+num > 0 && +num < 90) {\r\n        result = '东北风';\r\n    }else if (+num === 90) {\r\n        result = '东风';\r\n    }else if (+num > 90 && +num < 180) {\r\n        result = '东南风';\r\n    }else if (+num === 180) {\r\n        result = '南风';\r\n    }else if (+num > 180 && +num < 270) {\r\n        result = '西南风';\r\n    }else if (+num === 270) {\r\n        result = '西风';\r\n    }else if (+num > 270 && +num < 269) {\r\n        result = '西北风';\r\n    }\r\n    return result;\r\n};\r\n\r\n\r\nexport const validateForm = (elForm: FormInstance) =>\r\n    new Promise((resolve, reject) => {\r\n        elForm.validate(valid => {\r\n            if (valid) {\r\n                resolve(valid);\r\n            } else {\r\n                reject();\r\n            }\r\n        });\r\n    });\r\n\r\n\r\nexport const getFlatArry = tree => {\r\n    const temp = [];\r\n    tree.map(el => {\r\n        temp.push(el.id);\r\n        if(el.children && el.children.length ) {\r\n            temp.push(...getFlatArry(el.children));\r\n        }\r\n    });\r\n    return temp;\r\n};\r\n\r\n\r\nexport const handleExport = async (url) => {\r\n    const elink = document.createElement('a');\r\n    elink.style.display = 'none';\r\n    elink.href = url;\r\n    document.body.appendChild(elink);\r\n    elink.click();\r\n    URL.revokeObjectURL(elink.href); // 释放URL 对象\r\n    document.body.removeChild(elink);\r\n\r\n}\r\n\r\n\r\nconst startPolling = () => {\r\n\r\n  };\r\n\r\n  // 停止轮询\r\nconst stopPolling = () => {\r\n\r\n};\r\nexport class Polling {\r\n    private pollingInterval: number | null = null;\r\n    private intervalTime: number;\r\n    private callback: (() => void) | null = null;\r\n\r\n    constructor(intervalTime: number, callback: () => void) {\r\n        this.intervalTime = intervalTime;\r\n        this.callback = callback;\r\n    }\r\n\r\n    /**\r\n     * 启动轮询\r\n     */\r\n    start(): void {\r\n        if (this.pollingInterval !== null) {\r\n            console.warn('轮询已在运行中，无需重复启动');\r\n            return;\r\n        }\r\n\r\n        if (typeof this.callback !== 'function') {\r\n            console.error('无法启动轮询：回调函数未定义');\r\n            return;\r\n        }\r\n\r\n        this.pollingInterval = window.setInterval(this.callback, this.intervalTime);\r\n    }\r\n\r\n    /**\r\n     * 停止轮询\r\n     */\r\n    stop(): void {\r\n        if (this.pollingInterval === null) {\r\n            return;\r\n        }\r\n\r\n        window.clearInterval(this.pollingInterval);\r\n        this.pollingInterval = null;\r\n    }\r\n\r\n    /**\r\n     * 销毁轮询器（适用于组件卸载等场景）\r\n     */\r\n    destroy(): void {\r\n        this.stop();\r\n        this.callback = null;\r\n    }\r\n\r\n    /**\r\n     * 动态更新轮询间隔时间\r\n     * @param newInterval 新的间隔时间（毫秒）\r\n     */\r\n    updateInterval(newInterval: number): void {\r\n        if (newInterval <= 0) {\r\n            console.error('间隔时间必须大于0毫秒');\r\n            return;\r\n        }\r\n\r\n        const wasRunning = this.pollingInterval !== null;\r\n        this.stop(); // 停止当前轮询\r\n        this.intervalTime = newInterval;\r\n\r\n        if (wasRunning) {\r\n            this.start(); // 如果之前是运行状态，则重新启动\r\n        }\r\n    }\r\n}\r\n","<template>\n    <div class=\"main-content\" >\n        <section class=\"flex-box\" id=\"mapParentContainer\">\n            <el-card header=\"车队\"  class=\"tree-card\" style=\"width: 300px; height: 100%;\">\n                <el-form :model=\"searchForm\">\n                    <el-form-item>\n                        <el-input v-model=\"searchForm.carNumber\" placeholder=\"请输入车牌号\" @blur=\"handleSearchCard\">\n                        </el-input>\n                    </el-form-item>\n                    <el-form-item>\n                        <el-radio-group v-model=\"searchForm.carType\" @change=\"handleCarTypeChanged\">\n                            <el-radio\n                                v-for=\"item in radioOps\"\n                                :key=\"item.value\"\n                                :label=\"item.value\">\n                                {{ item.label }}\n                            </el-radio>\n\n                        </el-radio-group>\n                    </el-form-item>\n                </el-form>\n                <el-tree\n                    ref=\"treeRef\"\n                    show-checkbox\n                    node-key=\"id\"\n                    :data=\"carTeam\"\n                    @node-click=\"handleNodeClick\"\n                    @check-change=\"handleCarSeleted\"\n                />\n            </el-card>\n            <MyMap @init=\"initMap\" @resize=\"handleMapResize\"></MyMap>\n        </section>\n\n    </div>\n</template>\n\n<script setup lang=\"ts\">\nimport useTableSetting from '@/hooks/useTableSetting';\nimport { ref, onMounted, onUnmounted, reactive, nextTick, watch } from 'vue';\nimport { ElMessage, ElTree, FormInstance, ElMessageBox } from 'element-plus';\n\nimport { getFlatDeepTreeData } from '@/utils/common';\nimport { Search, Plus } from '@element-plus/icons-vue';\nimport { getRealtimeMsg, carTeam, histroyMessages, paginate} from './mock';\nimport { Polling } from '@/helper/index';\nimport carIcon from '@/assets/images/car.png';\nimport  ErrorCarIcon from '@/assets/images/error-car.png';\n\nlet map = null;\nconst markers: object = {};\nlet isFirstLoad = true;\nlet mapPolling: Polling | null = null\nlet realtimeTablePolling: Polling | null = null\nlet currentInfoWindow = null; // 跟踪当前显示的信息窗口\n\nconst searchForm = reactive({\n    carNumber: '', //车牌号\n    carType: ''  // 为空表示全部类型\n})\n\nconst radioOps = ref([\n    { label: '全量车', value : 1 },\n    { label: '任务车', value : 2 },\n])\n\nconst handleMapResize = ({ height }) => {\n    const mapParentContainer = document.getElementById('mapParentContainer');\n    mapParentContainer.style.height = height +'px'\n}\nconst initMap = (mapInstance) => {\n    map = mapInstance;\n    mapPolling = new Polling(\n        3000,\n        async () => {\n            // TODO 地图点位轮询接口，\n            const params = {\n                carNumber: searchForm.carNumber,\n                treeData : treeData.value  // 车队树中选中的checkbox值集合， 默认是空数组， 根据接口自行组装该参数\n            }\n\n            const carList = await getRealtimeMsg();   // 接口替换\n\n            drawMarker(carList, map);\n        },\n\n    );\n    mapPolling.start();\n}\n\n\nconst handleSearchCard = () => {\n    // TODO 调用接口查询是否存在车辆, 返回布尔值, 如存在，则高亮该车辆\n\n    // const params = { carNumber: searchForm.carNumber  }\n    //  const hasTarget: boolean =  await https(params)\n    // if(hasTarget) {\n    //     hightLightNode(searchForm.carNumber);\n    // }\n}\n\n\nconst handleCarTypeChanged = () => {\n    // TODO , 返回布尔值, 如存在，则高亮该车辆\n\n    // const params = { carNumber: searchForm.carNumber  }\n    //  const hasTarget: boolean =  await https(params)\n    // if(hasTarget) {\n    //     hightLightNode(searchForm.carNumber);\n    // }\n}\n\nonMounted(() => {\n    // 历史数据轮询\n    realtimeTablePolling = new Polling(\n        5000,\n        () => {\n            // 模拟获取数据\n            getRealtimeTableList();\n        },\n\n    );\n    realtimeTablePolling.start();\n    getHistroyTableList();\n\n\n});\n\nonUnmounted(() => {\n    mapPolling?.stop()\n    realtimeTablePolling?.stop();\n})\n\nconst histroyTableList = ref<object[]>([])\n\nconst histroyTablePager = ref({\n    page: 1,\n    pageSize: 10,\n    total: 0,\n})\n\nconst realtimeTableList = ref<object[]>([])\n\nconst realtimeTablePager = ref({\n    page: 1,\n    pageSize: 10,\n    total: 0,\n})\n\nconst getHistroyTableList = async() => {\n    // TODO  历史告警信息  接口需要返回 list类型的data字段  和 总数据条数count字段，用于前端分页\n    // 接口入参params\n    const params = {\n        page: realtimeTablePager.value.page,\n        pageSize: realtimeTablePager.value.pageSize,\n        carType: searchForm.carType,    // 区分全量车和任务车\n        treeData : treeData.value  // 车队树中选中的checkbox值集合， 默认是空数组， 根据接口自行组装该参数\n    }\n    // 接口替换\n    const { data, total} = await paginate({\n        page: histroyTablePager.value.page,\n        pageSize: histroyTablePager.value.pageSize,\n        list: histroyMessages,\n    })\n\n    histroyTableList.value = data;\n    histroyTablePager.value.total = total;\n}\n\nconst getRealtimeTableList = async() => {\n    // TODO  调实时告警数据接口  接口需要返回 list类型的data字段  和 总数据条数count字段，用于前端分页\n    // 接口入参params\n    const params = {\n        page: realtimeTablePager.value.page,\n        pageSize: realtimeTablePager.value.pageSize,\n        carType: searchForm.carType,    // 区分全量车和任务车\n        treeData : treeData.value  // 车队树中选中的checkbox值集合， 默认是空数组， 根据接口自行组装该参数\n    }\n    // 接口替换\n    const { data, total} = await paginate({\n        page: realtimeTablePager.value.page,\n        pageSize: realtimeTablePager.value.pageSize,\n        list: histroyMessages.slice(0,2),\n    })\n\n\n    realtimeTableList.value = data;\n    realtimeTablePager.value.total = total;\n}\n\nconst handleDelete = ({ id }) => {\n    // TODO 调用已读接口\n\n    const index = realtimeTableList.value.findIndex(item => item.id === id); // 仅模拟删除效果，用接口替换\n    realtimeTableList.value.splice(index, 1);  // 仅模拟删除效果，用接口替换\n\n    ElMessage({\n        type: 'success',\n        message: '操作成功！',\n    });\n    //更新历史数据\n    getHistroyTableList()\n\n}\n\nconst handleSizeChange = (action: string, rows: number) => {\n    if(action === 'histroy') {\n        histroyTablePager.value.page = 1;\n        histroyTablePager.value.pageSize = rows;\n        getHistroyTableList()\n    } else {\n        realTimeTablePager.value.page = 1;\n        realTimeTablePager.value.pageSize = rows;\n    }\n\n};\nconst handleCurrentChange = (action: string, page: number) => {\n    if(action === 'histroy') {\n        histroyTablePager.value.page = page;\n        getHistroyTableList()\n    } else {\n        realTimeTablePager.value.page = page;\n        getRealtimeTableList();\n    }\n};\n\n\nconst realTimeTablePager = ref({\n    page: 1,\n    pageSize: 10,\n    total: 0,\n})\n\n\n\nconst getIcon = (ishighLight = false) => {\n    const iconPath = ishighLight\n        ? new URL('../..//assets/car_error.png', import.meta.url).href\n        : new URL('../../assets/car.png', import.meta.url).href;\n\n    return new AMap.Icon({\n        image: iconPath,\n        size: new AMap.Size(25, 25), // 图标尺寸\n        imageSize: new AMap.Size(25, 25) // 渲染时拉伸大小\n    });\n};\n\n\n\n\nconst treeRef = ref(null)\nconst handleNodeClick = (data: any[] )=> {\n\n    hightLightNode(data.label);\n    // 处理节点点击事件\n    // 可以在这里执行其他操作，比如获取节点详情等\n};\n\n\nconst treeData = ref([])\nconst handleCarSeleted = () => {\n    treeData.value = treeRef.value!.getCheckedNodes(false, false)\n    getHistroyTableList()\n\n}\n\n\n\nconst drawMarker = (data: any[], map) => {\n    data.forEach(car => {\n        const { id, lng, lat, carNumber, err } = car;\n        if (markers[id]) {\n        // 已存在的车辆，更新位置\n            const position = new AMap.LngLat(lng, lat);\n            markers[id].setPosition(position);\n        } else {\n        // 新车辆，创建新的 marker\n            const marker = new AMap.Marker({\n\n                map,\n                icon:getIcon(),\n                position: [lng, lat],\n                offset: new AMap.Pixel(-13, -30),\n                extData: { ...car } // 存储车牌号用于匹配 // 可选：用于后续识别\n            });\n            marker.on('click', () => {\n                hightLightNode(car.carNumber);\n            });\n\n            markers[id] = marker;\n        }\n    });\n\n    if (isFirstLoad && data.length > 0) {\n        map.setFitView(); // 自动适配所有 Marker 显示在视野范围内\n        isFirstLoad = false; // 设置为非首次加载\n    }\n\n};\nconst hightLightMarker = ref(null) //\nconst hightLightNode = (carNumber: string) => {\n\n    // 清除所有高亮状态\n    Object.values(markers).forEach(marker => {\n        const extData = marker.getExtData();\n        marker.setIcon(getIcon());\n    });\n     // 关闭现有的信息窗口\n\n\n    // 查找并高亮匹配的 Marker\n    for (const id in markers) {\n        const marker = markers[id];\n        const extData = marker.getExtData();\n        if (extData && extData.carNumber === carNumber) {\n            // 设置高亮图标\n            if (hightLightMarker.value) {\n                const prevExtData = hightLightMarker.value.getExtData();\n                if (prevExtData.carNumber && prevExtData.carNumber === carNumber && currentInfoWindow) {\n                    currentInfoWindow.close();\n                    currentInfoWindow = null;\n                    hightLightMarker.value = null;\n                    // 如果当前高亮的就是这个节点，则不做任何操作\n                    return;\n                }\n            }\n            const position = marker.getPosition();\n            marker.setIcon(getIcon(true));\n            map.panTo(position,500); // 移动地图中心到车辆位置\n            hightLightMarker.value = marker;\n            setTimeout(() => {\n                showInfoWindow(marker);\n            }, 500);\n\n            break;\n        }\n    }\n};\n\nconst showInfoWindow = (marker) => {\n    const extData = marker.getExtData();\n    const position = marker.getPosition();\n\n    const content = `\n        <div class=\"info-window\">\n            <p><label>车牌号：</label>${extData.carNumber}</p>\n            <p><label>坐标：</label>${position.lng}, ${position.lat}</p>\n            <p><label>告警信息：</label>${extData.errMsg || '无'}</p>\n            <p>\n                <a  class=\"el-link el-link--primary \" href='#'>\n                    <span class=\"el-link__inner\">查看轨迹</span>\n                </a>\n            </p>\n        </div>\n    `;\n\n    currentInfoWindow = new AMap.InfoWindow({\n        content,\n        offset: new AMap.Pixel(0, -30)\n    });\n\n    currentInfoWindow.open(map, position);\n};\n\n\n\n//const { maxTableHeight, setTableMaxHeight } = useTableSetting({ id: 'userTable', offsetBottom: 92 });\n</script>\n\n<style scoped lang=\"scss\">\n.main-content{\n    overflow: auto;\n}\n.flex-box{\n    display: flex;\n    height:500px;\n    min-height: 500px;\n    position: relative;\n    justify-content: space-between;\n    .tree-card{\n        max-width: 250px;\n        margin-right: 20px;\n        height: 100%;\n        overflow: auto;\n    }\n\n    #map-container {\n        position: absolute !important;\n        top: 0px;\n        left: 270px;\n        right: 0;\n        bottom: 0;\n        width: auto !important;\n        height: auto !important;\n    }\n\n}\n.table-box {\n    display: flex;\n    min-height: 300px;\n    margin-top: 20px;\n    .el-card {\n        width: 50%;\n        & + .el-card {\n            margin-left: 20px;\n        }\n    }\n    .el-pagination  {\n        margin-top: 20px ;\n        text-align: right;\n    }\n}\n.main-content > .btns{\n    margin:10px 0 20px;\n}\n.search-form{\n   ::v-deep(){\n    .el-input,.el-select{\n        width: 265px !important;\n    }\n   }\n}\n</style>\n\n"],"names":["carTeam","histroyMessages","paginate","list","page","pageSize","total","start","end","realtimeMsgMsg","getRealtimeMsg","updatedCarTeam","totalVehicles","errCount","selected","car","s","deltaLng","deltaLat","e","o","module","this","t","n","_","require$$0","d","dayjs","isToday","isYesterday","customParseFormat","Polling","intervalTime","callback","newInterval","wasRunning","_sfc_main","_defineComponent","__props","map","markers","isFirstLoad","mapPolling","realtimeTablePolling","currentInfoWindow","searchForm","reactive","radioOps","ref","handleMapResize","height","mapParentContainer","initMap","mapInstance","carList","drawMarker","handleSearchCard","handleCarTypeChanged","onMounted","getRealtimeTableList","getHistroyTableList","onUnmounted","histroyTableList","histroyTablePager","realtimeTableList","realtimeTablePager","data","getIcon","ishighLight","iconPath","treeRef","handleNodeClick","hightLightNode","treeData","handleCarSeleted","map2","id","lng","err","position","lat","marker","hightLightMarker","extData","carNumber","prevExtData","showInfoWindow","content"],"mappings":"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"}