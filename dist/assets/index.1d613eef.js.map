{"version":3,"file":"index.1d613eef.js","sources":["../../src/hooks/useTableSetting.ts","../../src/views/taskManage/mock.ts","../../src/views/taskManage/index.vue"],"sourcesContent":["import { onMounted, nextTick, ref, onUnmounted } from 'vue';\r\n\r\nfunction getElementTop(el: HTMLElement): number {\r\n    if (el && el.offsetParent) {\r\n        return getElementTop(el.offsetParent as HTMLElement) + el.offsetTop;\r\n    }\r\n    return el.offsetTop;\r\n}\r\n\r\nexport function setTableMaxHeight(id: string, num = 120): number {\r\n    // debugger;\r\n    const scrollHeight = document.body.offsetHeight;\r\n    const offsetTop = getElementTop(document.getElementById(id) as HTMLElement);\r\n    const maxHeight = scrollHeight - offsetTop - num;\r\n    return maxHeight;\r\n}\r\n\r\ntype containerOps = {\r\n    id?: string;\r\n    offsetBottom?: number;\r\n};\r\n\r\n// 设置table的自适应高度值\r\nexport default function useTableSetting({ id = 'xc-table', offsetBottom = 100 }: containerOps = {}) {\r\n    const maxTableHeight = ref(0);\r\n    const setHeight = () => {\r\n\r\n        maxTableHeight.value = setTableMaxHeight(id, offsetBottom);\r\n    };\r\n    onMounted(async () => {\r\n        setTimeout(setHeight, 200);\r\n        window.addEventListener('resize', setHeight);\r\n    });\r\n    onUnmounted(() =>{\r\n        window.removeEventListener('resize', setHeight);\r\n    });\r\n    return {\r\n        maxTableHeight,\r\n        setTableMaxHeight,\r\n    };\r\n}\r\n","/*\n * @Author: leiming\n * @Date: 2025-06-12 11:25:42\n * @LastEditors: leiming\n * @LastEditTime: 2025-06-12 17:21:20\n * @Description: file content\n */\n\n\n\nexport const taskList = [\n    { id: 1, name: '任务1',  startAddress: '起点1', endAddress: '终点1', startPointLng: 104.065735, endPointLng: 104.065735, startPointLat: 30.659462, endPointLat: 30.659462 },\n    { id: 2, name: '任务2', startAddress: '起点2', endAddress: '终点2', startPointLng: 104.066735, endPointLng: 104.066735, startPointLat: 30.660462, endPointLat: 30.660462 },\n    { id: 3, name: '任务3', startAddress: '起点3', endAddress: '终点3', startPointLng: 104.067735, endPointLng: 104.067735, startPointLat: 30.661462, endPointLat: 30.661462 },\n]\n\n\nconst generate = () => {\n    return   taskList.map((item, index) => {\n        return {\n            id: item.id,\n            name: item.name,\n            startAddress: item.startAddress,\n            endAddress: item.endAddress,\n            startPoint: item.startPointLng+','+item.startPointLat,\n            endPoint: item.endPointLng+','+item.endPointLat ,\n            startTime: new Date().toISOString(),\n            endTime: new Date().toISOString(),\n            type: 'type' + (index % 3),\n            amount: Math.floor(Math.random() * 1000),\n            unit: '件',\n            freight: Math.floor(Math.random() * 500),\n            status: index % 2 === 0 ? '进行中' : '已完成'\n        };\n    })\n}\n\nexport const paginate = <T>({ list, page, pageSize }: {list: T[], page: number, pageSize: number}): { data: T[], total: number } => {\n    let lists = generate()\n    const total = lists.length;\n   // const count = Math.ceil(total / pageSize); // 总页数\n\n    // 计算起始索引和结束索引\n    const start = (page - 1) * pageSize;\n    const end = start + pageSize;\n\n    const data = lists.slice(start, end); // 当前页数据\n\n    return {\n        data,\n        total\n    };\n};\n","<!--\n * @Author: leiming\n * @Date: 2025-06-12 10:23:40\n * @LastEditors: leiming\n * @LastEditTime: 2025-06-13 12:54:40\n * @Description: file content\n-->\n<template>\n    <div class=\"main-content\">\n        <ElForm\n            ref=\"searchFormRef\"\n            :model=\"searchForm\"\n            inline\n            class=\"search-form\"\n            label-width=\"68px\"\n            label-position=\"left\">\n\n                <ElFormItem label=\"任务名称\" prop=\"name\">\n                    <el-input v-model=\"searchForm.name\" placeholder=\"请输入车牌号\" clearable />\n\n                </ElFormItem>\n\n            <ElFormItem>\n                <ElButton\n\n                    color=\"#4371EE\"\n                    @click=\"reset(false)\"\n                >\n                    查询\n                </ElButton>\n                <ElButton\n\n                    plain=\"\"\n                    @click=\"reset(true)\"\n                >\n                    重置\n                </ElButton>\n            </ElFormItem>\n        </ElForm>\n            <!-- </ElCol> -->\n            <div class=\"btns\">\n                <ElButton\n\n                    class=\"add-btn\"\n                    color=\"#4371EE\"\n\n                    :icon=\"Plus\"\n                    @click=\"addShow = true\"\n                >\n                    添加任务\n                </ElButton>\n            </div>\n            <ElTable\n                border\n                id=\"userTable\"\n                class=\"table\"\n                :data=\"tableData\"\n                :style=\"{ height: `${maxTableHeight}px`, overflow: 'auto' }\"\n            >\n                <ElTableColumn label=\"序号\" width=\"80\">\n                    <template #default=\"scoped\">\n                        {{ ((searchForm.page - 1) * searchForm.pageSize) + scoped.$index + 1 }}\n                    </template>\n                </ElTableColumn>\n                <ElTableColumn prop=\"name\" label=\"任务名\"></ElTableColumn>\n                <ElTableColumn prop=\"startAddress\" label=\"起点\"></ElTableColumn>\n                <ElTableColumn prop=\"endAddress\" label=\"终点\"></ElTableColumn>\n                <ElTableColumn label=\"起点经纬度\">\n                    <template #default=\"scope\">\n                        <span>\n                            经度:{{ scope.row.startPosition[0] }}<br />\n                            纬度:{{ scope.row.startPosition[1] }}\n                        </span>\n\n                    </template>\n                </ElTableColumn>\n                <ElTableColumn prop=\"endPointLat\" label=\"终点经纬度\">\n                    <template #default=\"scope\">\n                        <span>\n                            经度:{{ scope.row.endPosition[0] }}<br />\n                            纬度:{{ scope.row.endPosition[1] }}\n                        </span>\n\n                    </template>\n                </ElTableColumn>\n                <ElTableColumn prop=\"startTime\" label=\"创建时间\" width=\"150\"></ElTableColumn>\n                <ElTableColumn  fixed=\"right\" label=\"操作\" width=\"120\">\n                    <template #default=\"scope\">\n                        <ElButton\n\n                            link\n                            type=\"text\"\n\n                            @click=\"editFun(scope.row)\"\n                        >\n                            修改\n                        </ElButton>\n                        <ElButton  link type=\"text\"  @click=\"handleDelete(scope.row)\">\n                            删除\n                        </ElButton>\n\n                    </template>\n                </ElTableColumn>\n            </ElTable>\n\n            <ElPagination\n                class=\"pagination\"\n                background\n                layout=\"total,sizes,prev, pager, next,jumper\"\n                :total=\"total\"\n                :current-page=\"searchForm.page\"\n                :page-sizes=\"[10, 20, 50, 100]\"\n                :page-size=\"searchForm.pageSize\"\n                @size-change=\"handleSizeChange\"\n                @current-change=\"handleCurrentChange\"\n            />\n\n            <!--新增或编辑角色-->\n            <ElDialog   class=\"main-dialog\" v-model=\"addShow\"  :title=\"addForm.id ? '修改任务' : '添加任务'\" width=\"600px\">\n                <div class=\"dialog-form\">\n                    <ElForm\n                        ref=\"addFormRef\"\n                        :model=\"addForm\"\n                        :rules=\"rules\"\n                        label-width=\"80px\"\n                        label-position=\"left\"\n                    >\n\n                    <ElFormItem label=\"任务名\" prop=\"name\" class=\"full-item\">\n                        <el-input v-model=\"addForm.name\"  placeholder=\"请输入\"  />\n                    </ElFormItem>\n\n                    <ElFormItem label=\"起点坐标\" prop=\"startPoint\" class=\"full-item\">\n                        <span v-if=\"addForm.startPoint\">经度:{{ addForm.startPosition[0] }}，纬度:{{ addForm.startPosition[1] }}</span>\n                        <el-button @click=\"handleShowMap('startPoint')\" type=\"primary\" plain :icon=\"Location\" style=\"margin-left: 10px\">地图选点</el-button>\n                    </ElFormItem>\n                    <ElFormItem label=\"起点位置\" prop=\"startAddress\" class=\"full-item\">\n                        <el-input type=\"textarea\" v-model=\"addForm.startAddress\" :rows=\"2\" placeholder=\"请输入\"  />\n                    </ElFormItem>\n\n                    <ElFormItem label=\"终点坐标\" prop=\"endPoint\" class=\"full-item\">\n                        <span v-if=\"addForm.endPoint\">经度:{{ addForm.endPosition[0] }}，纬度:{{ addForm.endPosition[1] }}</span>\n                        <el-button @click=\"handleShowMap('endPoint')\" type=\"primary\" plain :icon=\"Location\" style=\"margin-left: 10px\">地图选点</el-button>\n                    </ElFormItem>\n                    <ElFormItem label=\"终点位置\" prop=\"endAddress\" class=\"full-item\">\n                        <el-input type=\"textarea\" v-model=\"addForm.endAddress\" :rows=\"2\" placeholder=\"请输入\"  />\n                    </ElFormItem>\n\n\n                    </ElForm>\n                </div>\n                <template #footer>\n                    <span  class=\"dialog-footer\">\n                        <ElButton  @click=\"addShow = false\">取 消</ElButton>\n                        <ElButton color=\"#4371EE\"  @click=\"submitForm(addFormRef)\">提 交</ElButton>\n                    </span>\n                </template>\n\n            </ElDialog>\n\n\n            <ElDialog\n                class=\"main-dialog\"\n                v-model=\"showMapDialog\"\n                title=\"地图选点\"\n                width=\"80%\">\n                <div class=\"dialog-form\">\n                    <MyMap ref=\"myMapRef\" :autoComplete=\"true\" :resize=\"false\" class=\"my-map\" @init=\"mapInit\" @select=\"handleGetMapLocation\"></MyMap>\n                </div>\n                <template #footer>\n                    <span  class=\"dialog-footer\" >\n                        <ElButton  @click=\"showMapDialog = false\">取 消</ElButton>\n                        <ElButton color=\"#4371EE\"  @click=\"handleEnsure\">确 定</ElButton>\n                    </span>\n                </template>\n            </ElDialog>\n\n\n    </div>\n</template>\n\n<script setup lang=\"ts\">\nimport useTableSetting from '@/hooks/useTableSetting';\nimport { ref, onMounted, reactive, nextTick, watch } from 'vue';\nimport { DictType, dictType } from '@/components/DictSelect/localDictDefine';\nimport { ElMessage, ElTree, FormInstance, ElMessageBox } from 'element-plus';\n\nimport { getFlatDeepTreeData } from '@/utils/common';\nimport { Search, Plus, Location } from '@element-plus/icons-vue';\nimport { validateForm } from '@/helper/index';\nimport MyMap from '@/components/MyMap/index.vue';\nimport { addDict, delDict, dictList, editDict } from '@/api/index.ts';\nimport { taskList, paginate } from './mock.ts'\n\nconst treeRef = ref<InstanceType<typeof ElTree>>();\nconst tableData: any = ref([]);\n\n\n\nconst searchFormRef = ref<FormInstance>(null);\n\nconst details = ref({});\nlet map = null\nlet marker = null\nconst myMapRef = ref(null)\nlet tempLocation = []  // 临时存储位置信息\n\n\nconst mapInit  = mapInstance => {\n    map = mapInstance;\n}\n\nconst initMap = () => {\n\n}\nconst drawMarker = () => {\n    map.on('click', (e) => {\n        const lnglat = [e.lnglat.lng, e.lnglat.lat]; // 获取点击坐标\n\n        if (marker) {\n\n            // 存在 marker：移动到点击位置\n            marker.setPosition(lnglat);\n\n        } else {\n            // 不存在 marker：创建新 marker\n            marker = new AMap.Marker({\n                position: lnglat,\n                map: map,\n                draggable: true // 可拖动\n            });\n        }\n        tempLocation = [e.lnglat.lng, e.lnglat.lat]\n\n    });\n\n    // 拖动 marker 事件（同步更新表单）\n    if (marker) {\n        marker.on('dragend', () => {\n            const position = marker.getPosition();\n            tempLocation = [position.lng, position.lat]\n        });\n    }\n}\n\nconst handleGetMapLocation = info => {\n    const { location, name, address } = info;\n    console.log('获取到的位置信息:', location);\n    const lnglat = [location.lng, location.lat]; // 获取经纬度\n    myMapRef.value?.clearInput()\n    if (marker) {\n            // 存在 marker：移动到点击位置\n        marker.setPosition(location);\n        map.setCenter(location, true);\n\n    } else {\n        // 不存在 marker：创建新 marker\n        marker = new AMap.Marker({\n            position: location,\n            map: map,\n            draggable: true // 可拖动\n        });\n    }\n    tempLocation = lnglat\n}\n\nconst clearMapMarkers = () => {\n    if(map) {\n        if (marker) {\n            map.remove(marker);\n            marker = null;\n        }\n        tempLocation = [];\n        // 解绑事件监听器\n        map.off('click');\n        if (marker) {\n            marker.off('dragend');\n        }\n    }\n}\n\nconst handleEnsure = () => {\n    if(!tempLocation || !tempLocation.length) {\n        ElMessage.error('请先在地图上选择位置');\n        return;\n    }\n    const positionKey = currentKey.value  === 'startPoint' ? 'startPosition' : 'endPosition';\n    //const addRessKey = currentKey.value === 'startPoint' ? 'startAddress' : 'endAddress';\n    addForm[positionKey] = tempLocation;\n    addForm[currentKey.value] = tempLocation.join(',');\n   // addRessKey[currentKey.value] = myMapRef.value?.getInputValue() || '';\n    showMapDialog.value = false;\n}\n\nconst currentKey = ref(null)\nconst handleShowMap = async (key) => {\n    clearMapMarkers();\n    currentKey.value = key;\n    const position = key === 'startPoint' ? addForm.startPosition : addForm.endPosition;\n    showMapDialog.value = true;\n    await nextTick()\n    if (!map) {\n        ElMessage.error('地图加载失败，请稍后再试！');\n        return;\n    }\n    if(addForm[key]) {\n        map.setCenter(position, true);\n        marker = new AMap.Marker({\n            position,\n            map: map,\n            draggable: true,\n        });\n        tempLocation = position; // 初始化临时位置\n        map.setFitView()\n    }\n\n    drawMarker()\n}\n\nconst searchForm = reactive<searchFormType>({\n    name: '',\n    page: 1,\n    pageSize: 10,\n});\nconst total = ref<number>(0);\n\n\n\nconst rules = reactive({\n    name: [{ required: true, message: '请输入任务名', trigger: 'blur' }],\n    startPoint: [{ required: true, message: '请选择起点坐标', trigger: 'change' }],\n    endPoint: [{ required: true, message: '请输入终点坐标', trigger: 'blur' }],\n});\n\n\nconst getList = async () => {\n    try {\n        // 接口替换 获取List数据\n        const params = {\n            ...searchForm,\n            list: taskList\n        }\n        const { data, total} = await paginate(params)\n\n        tableData.value = data.map(item => {\n            const startPosition = item.startPoint.split(',');\n            const endPosition = item.endPoint.split(',');\n            return {\n                ...item,\n                startPosition, // 将经纬度转换为位置数组\n                endPosition // 将经纬度转换为位置数组\n            }\n        });\n\n        total.value = total;\n    } catch (err) {}\n};\n\nconst handleDelete = async (row) => {\n    await ElMessageBox.confirm('确认要删除吗？', '提示', {\n        confirmButtonText: '确  定',\n        cancelButtonText: '取  消',\n        type: 'warning'\n    });\n    // TODO: 删除接口\n    // await delDict({ id: row.id });\n    ElMessage.success('删除成功！');\n    reset();\n};\n\nconst goDetail = (row) => {\n    details.value = JSON.parse(JSON.stringify(row));\n};\n\nconst reset = (reset: boolean) => {\n    if(reset) {\n        searchFormRef.value.resetFields();\n    }\n    searchForm.page = 1;\n    getList();\n};\n\nconst handleSizeChange = (rows: number) => {\n    searchForm.page = 1;\n    searchForm.pageSize = rows;\n    getList();\n};\nconst handleCurrentChange = (page: number) => {\n\n    searchForm.page = page;\n    getList();\n};\n\nconst addShow = ref<boolean>(false);\nconst showMapDialog = ref<boolean>(false);\nconst addFormRef = ref<FormInstance>(null);\nconst addForm = reactive({\n    id: null,\n    name: null,// 任务名称\n    startAddress: null,  // 起点描述\n    endAddress: null, // 终点描述\n    startPoint: null, // 起点经度,纬度\n    endPoint: null, // 终点经度\n\n});\n\n\nconst resetForm = (form) => {\n    Object.keys(form).forEach(key => addForm[key] = null);\n};\n\nwatch(\n    addShow,\n    val => {\n        if(!val) {\n            addFormRef.value.clearValidate();\n            resetForm(addForm);\n        }\n    }\n);\n\nconst submitForm = async (formEl: FormInstance | undefined) => {\n    await validateForm(formEl);\n    const params = {\n        id: addForm.id,\n        name: addForm.name.trim(),\n        startAddress: addForm.startAddress.trim(),\n        endAddress: addForm.endAddress.trim(),\n        startPoint: addForm.startPoint,\n        endPoint: addForm.endPoint\n    }\n    // TODO: 新增或编辑接口，如果参数带ID，则表示编辑，否则新增\n   // addForm.id ? await editDict(addForm) : await addDict(addForm);\n    ElMessage.success('提交成功！');\n    addShow.value = false;\n    getList();\n};\n\n\n\nconst editFun = async (row: any) => {\n    addShow.value = true;\n    Object.keys(row).forEach(key => {\n        if(key in addForm) {\n            addForm[key] = row[key];\n        }\n    });\n    if(row.startPoint) {\n        addForm.startPosition = row.startPoint.split(',');\n    }\n    if(row.endPoint) {\n        addForm.endPosition = row.endPoint.split(',');\n    }\n};\n\n\n\nonMounted(() => {\n    getList();\n});\nconst { maxTableHeight, setTableMaxHeight } = useTableSetting({ id: 'userTable', offsetBottom: 92 });\n</script>\n\n<style scoped lang=\"scss\">\n.my-map {\n    height: 65vh;\n}\n.main-content > .btns{\n    margin:10px 0 20px;\n}\n.authItem{\n    align-items: flex-start;\n}\n.search-form{\n   ::v-deep(){\n    .el-input,.el-select{\n        width: 265px !important;\n    }\n   }\n}\n</style>\n\n"],"names":["getElementTop","el","setTableMaxHeight","id","num","scrollHeight","offsetTop","useTableSetting","offsetBottom","maxTableHeight","ref","setHeight","onMounted","onUnmounted","taskList","generate","item","index","paginate","list","page","pageSize","lists","total","start","end","_sfc_main","_defineComponent","__props","tableData","searchFormRef","map","marker","myMapRef","tempLocation","mapInit","mapInstance","drawMarker","lnglat","position","handleGetMapLocation","info","location","name","address","_a","clearMapMarkers","handleEnsure","ElMessage","positionKey","currentKey","addForm","showMapDialog","handleShowMap","key","nextTick","searchForm","reactive","rules","getList","params","data","total2","startPosition","endPosition","handleDelete","row","ElMessageBox","reset","reset2","handleSizeChange","rows","handleCurrentChange","addShow","addFormRef","resetForm","form","watch","val","formEl","validateForm","editFun"],"mappings":"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"}