{"version":3,"file":"list.213b8f46.js","sources":["../../src/views/road/mock.ts","../../src/views/road/list.vue"],"sourcesContent":["export const paths = [\n    [104.054352, 30.58249],\n    [104.055085, 30.582357],\n    [104.05601, 30.582397],\n    [104.056781, 30.582397],\n    [104.057822, 30.582457],\n    [104.058863, 30.58249],\n    [104.059827, 30.58249],\n    [104.060058, 30.582125],\n    [104.059981, 30.580864],\n    [104.060058, 30.580731],\n    [104.059981, 30.580233],\n    [104.06002, 30.579801],\n    [104.059981, 30.579038],\n    [104.06002, 30.578773],\n    [104.060482, 30.578673],\n    [104.060868, 30.578738],\n    [104.061178, 30.578759],\n    [104.06156, 30.578749],\n    [104.062026, 30.578769],\n    [104.062026, 30.578769],\n    [104.062312, 30.578471],\n    [104.062336, 30.578327],\n    [104.0623, 30.578143],\n    [104.062276, 30.578009],\n    [104.062336, 30.577855],\n    [104.062384, 30.57766],\n    [104.062324, 30.5773],\n    [104.062563, 30.577249],\n    [104.062837, 30.577238],\n    [104.063052, 30.577228],\n    [104.063314, 30.577269],\n    [104.063446, 30.577279],\n    [104.06384, 30.577269],\n  ];\n\n\nexport const getPath = () => {\n    return paths\n}\n\nexport const carTeam = [\n    {\n        id: '1',\n        label: '车队1',\n        children:[\n            {\n                id: '1-1',\n                label: '川A12345',\n            },\n            {\n                id: '1-2',\n                label: '川B67890',\n            },\n            {\n                id: '1-3',\n                label: '川C54321',\n            }\n        ]\n    },\n    {\n        id: '2',\n        label: '车队2',\n        children:[\n            {\n                id: '2-1',\n                label: '川D98765',\n            },\n            {\n                id: '2-2',\n                label: '川E43210',\n            }\n        ]\n    }\n]\n\n\nexport const paginate = <T>({ list, page, pageSize }: {list: T[], page: number, pageSize: number}): { data: T[], total: number } => {\n    const total = list.length;\n   // const count = Math.ceil(total / pageSize); // 总页数\n\n    // 计算起始索引和结束索引\n    const start = (page - 1) * pageSize;\n    const end = start + pageSize;\n\n    const data = list.slice(start, end); // 当前页数据\n\n    return {\n        data,\n        total\n    };\n};\n\nexport const leftTable = [\n\n    {id: 1, timeRange: '10分钟', beginTime: '2023-10-01 10:00', lng:104.060482, lat: '30.578673',  endTime: '2023-10-01 10:10', location: '成都成华大道XXXXXX'},\n    {id: 2, timeRange: '20分钟', beginTime: '2023-10-01 10:10', lng:104.06384, lat: '30.577269', endTime: '2023-10-01 10:30', location: '成都成华大道XXXXXX'},\n]\n\nexport const rightTable  = ((paths) => {\n    return paths.map((item, index) => {\n        return {\n            id: index + 1,\n            lng: item[0],\n            lat: item[1],\n            time: `2023-10-01 10:${String(index).padStart(2, '0')}`,\n            speed:  `${index + 1} 米/秒`,\n            location: `成都成华大道XXXXXX ${index + 1}`\n        }\n    });\n\n})(paths)\n","<template>\n    <div class=\"main-content\" >\n        <section class=\"flex-box\" id=\"mapParentContainer\" style=\"height:700px\">\n            <section class=\"left-box\">\n\n                <el-card header=\"条件查询\"  class=\"tree-card\" >\n                    <el-form label-position=\"top\" :model=\"searchForm\">\n                        <el-form-item label=\"开始日期：\">\n                            <el-date-picker\n                                v-model=\"searchForm.beginDate\"\n                                type=\"date\"\n                                format=\"YYYY-MM-DD\"\n                                placeholder=\"开始日期\"\n                            />\n                        </el-form-item>\n                        <el-form-item label=\"结束日期：\">\n                            <el-date-picker\n                                v-model=\"searchForm.endDate\"\n                                type=\"date\"\n                                format=\"YYYY-MM-DD\"\n                                placeholder=\"开始日期\"\n                            />\n                        </el-form-item>\n                        <el-form-item label=\"选择车辆：\">\n                            <el-tree\n                                ref=\"treeRef\"\n                                :highlight-current=\"true\"\n                                node-key=\"id\"\n                                :data=\"carTeam\"\n                                @node-click=\"handleNodeClick\"\n\n                            />\n                        </el-form-item>\n                        <el-form-item style=\"text-align: center;\">\n                            <el-button type=\"primary\" @click=\"handleSearch\">查 询</el-button>\n                            <el-button  @click=\"handleReset\">重 置</el-button>\n                        </el-form-item>\n                    </el-form>\n\n                </el-card>\n                <el-card header=\"轨迹回放\"  class=\"bottom-card\">\n                    <el-form>\n                        <el-form-item label=\"回放进度：\">\n                            <div @mousedown=\"handleTouchStart\" style=\"width: 100%;\">\n                                <el-slider v-model=\"progress\"  :show-tooltip=\"false\" @change=\"handleProgressChange\"  />\n                            </div>\n\n                        </el-form-item>\n                        <el-form-item>\n\n                            <el-radio-group v-model=\"speed\" @change=\"handleSpeedChange\">\n                                <el-radio v-for=\"option in speedRadioOptions\" :key=\"option.value\" :label=\"option.value\">{{ option.label }}</el-radio>\n                            </el-radio-group>\n                        </el-form-item>\n                    </el-form>\n                    <section class=\"play-box\">\n                        <el-icon v-if=\"!isPlaying || isPaused\"  @click=\"startAnimation()\"><VideoPlay /></el-icon>\n                        <el-icon v-else @click=\"pauseAnimation()\"><VideoPause /></el-icon>\n                        <el-icon class=\"reset\" @click=\"resumeAnimation()\"><Refresh /></el-icon>\n                    </section>\n                </el-card>\n            </section>\n            <div class=\"map-layout\">\n                <MyMap @init=\"initMap\" @resize=\"handleMapResize\"></MyMap>\n            </div>\n        </section>\n\n        <section class=\" table-box\">\n            <el-card header=\"停靠信息\">\n                <el-table\n                    border\n                    id=\"userTable\"\n                    class=\"table\"\n                    :scrollbar-always-on=\"true\"\n                    :data=\"parkTableList\"\n                    >\n                    <el-table-column prop=\"id\" fixed label=\"id\" width=\"130\" />\n                    <el-table-column prop=\"timeRange\" label=\"停靠时长\"  width=\"180\" />\n                    <el-table-column prop=\"beginTime\" label=\"开始时间\"  width=\"180\" />\n                    <el-table-column prop=\"endTime\" label=\"结束时间\" width=\"180\" />\n                    <el-table-column prop=\"location\" label=\"位置描述\" width=\"180\">\n                    </el-table-column>\n\n                </el-table>\n\n                <el-pagination\n                    background\n                    layout=\"total,sizes,prev, pager, next,jumper\"\n                    :total=\"parkTablePager.total\"\n                    :current-page=\"parkTablePager.page\"\n                    :page-sizes=\"[10, 20, 50, 100]\"\n                    :page-size=\"parkTablePager.pageSize\"\n                     @size-change=\"e => handleSizeChange('park', e)\"\n                    @current-change=\"e => handleCurrentChange('park', e)\"\n\n                />\n            </el-card>\n\n            <el-card header=\"轨迹信息\">\n                <el-table\n                    border\n                    id=\"userTable\"\n                    class=\"table\"\n                    :scrollbar-always-on=\"true\"\n                    :data=\"locationTableList\"\n                    :highlight-current-row=\"true\"\n                    @row-click =\"handleLocationRowClick\"\n                    >\n                    <el-table-column prop=\"id\" fixed label=\"id\" width=\"130\" />\n                    <el-table-column prop=\"time\" label=\"时间\"  width=\"180\" />\n                    <el-table-column prop=\"speed\" label=\"速度\" width=\"180\" />\n                    <el-table-column  label=\"经纬度\" width=\"180\">\n                        <template #default=\"scope\" >\n                            经度: {{ scope.row.lng }}<br />\n                            纬度: {{ scope.row.lat }}\n                        </template>\n                    </el-table-column>\n                    <el-table-column prop=\"location\" label=\"位置描述\" width=\"400\" />\n                </el-table>\n\n                <el-pagination\n\n                    background\n                    layout=\"total,sizes,prev, pager, next,jumper\"\n                    :total=\"locationTablePager.total\"\n                    :current-page=\"locationTablePager.page\"\n                    :page-sizes=\"[10, 20, 50, 100]\"\n                    :page-size=\"locationTablePager.pageSize\"\n                     @size-change=\"e => handleSizeChange('location', e)\"\n                    @current-change=\"e => handleCurrentChange('location', e)\"\n\n                />\n            </el-card>\n        </section>\n\n    </div>\n</template>\n\n<script setup lang=\"ts\">\nimport useTableSetting from '@/hooks/useTableSetting';\nimport { ref, onMounted, onUnmounted, reactive, nextTick, watch } from 'vue';\nimport { ElMessage, ElTree, FormInstance, ElMessageBox } from 'element-plus';\n\nimport { getFlatDeepTreeData } from '@/utils/common';\nimport { getPath, carTeam as carTeamData, leftTable, rightTable, paginate} from './mock';\nimport { Polling } from '@/helper/index';\nimport carIcon from '@/assets/images/car.png';\nimport  ErrorCarIcon from '@/assets/images/error-car.png';\nimport type { CSSProperties } from 'vue'\nimport dayjs from '@/helper/dayjs'\n\nimport { VideoPlay, VideoPause, Refresh } from '@element-plus/icons-vue';\nconst getIcon = (ishighLight = false) => {\n    const iconPath = new URL('../../assets/moving.png', import.meta.url).href;\n\n    return new AMap.Icon({\n        image: iconPath,\n        size: new AMap.Size(21.75, 49.5), // 图标尺寸\n        imageSize: new AMap.Size(21.75, 49.5) // 渲染时拉伸大小\n    });\n};\n\nconst isPlaying = ref(false); // 是否正在播放动画\n\ninterface Mark {\n  style: CSSProperties\n  label: string\n}\ntype Marks = Record<number, Mark | string>\n\n// 地图相关全局变量\ninterface AMapElements {\n    marker?: any;\n    polyline?: any;\n    passedPolyline?: any;\n}\ninterface TreeInstance {\n    setCurrentKey: (key: string | null) => void;\n}\nconst treeRef = ref<TreeInstance | null>(null);\nconst mapElements = reactive<AMapElements>({});\nlet pathData: number[][] = [];\nlet map = null;\nlet marker: object = {};\nconst isPaused = ref(false); // 是否暂停\n\nconst searchForm = reactive({\n    beginDate: '',\n    carNumber:'',\n    endDate: ''  // 为空表示全部类型\n})\n\nconst treeData = ref([])\nconst progress = ref(0); // 回放速度\nconst speed = ref(800)\nconst speedRadioOptions = [\n    { label: 'x1', value: 800 },\n    { label: 'x5', value: 400 },\n    { label: 'x10', value: 200 },\n    { label: 'x20', value:  100},\n    { label: 'x50', value: 50 },\n  ]\n\n\n\nconst carTeam = ref([]); // 车队树数据\n\nconst getCarTeam = () => {\n    // TODO 车队树数据接口\n    // 接口替换\n   // const carTeamData = await getFlatDeepTreeData();\n    carTeam.value = carTeamData   //接口数据绑定到JS内存\n\n}\n\ngetCarTeam()  // 初始化车队树数据\n\nconst handleMapResize = ({ height }) => {\n    const mapParentContainer = document.getElementById('mapParentContainer');\n    mapParentContainer.style.height = height +'px'\n}\nconst initMap = (mapInstance) => { map = mapInstance; }\n\nconst drawMap = (pathData: number[][]) => {\n\n    // 清理历史轨迹\n    if (window.polyline) window.polyline.setMap(null);\n    if (window.passedPolyline) window.passedPolyline.setMap(null);\n\n    // 重新创建轨迹\n    window.polyline = new AMap.Polyline({\n        map: map,\n        path: pathData,\n        showDir:true,\n        strokeColor: \"#28F\",\n        strokeWeight: 6,\n    });\n\n    window.passedPolyline = new AMap.Polyline({\n        map: map,\n        strokeColor: \"#AF5\",\n        strokeWeight: 6,\n    });\n\n    // 重新创建标记物\n    window.marker = new AMap.Marker({\n        map: map,\n        position: pathData[0],\n        icon: getIcon(),\n        //icon: \"https://a.amap.com/jsapi_demos/static/demo-center-v2/car.png\",\n\n        offset: new AMap.Pixel(-13, -26),\n    });\n\n    // 重新绑定事件\n    window.marker.on('moving', function (e) {\n        const currentIndex  = findNearestPointIndex(pathData, e.target.getPosition())\n        const progrss = currentIndex / pathData.length * 100\n        progress.value = progrss; // 更新进度条\n        console.log(progrss)\n        isPlaying.value = currentIndex < (pathData.length - 1)\n        window.passedPolyline.setPath(e.passedPath);\n        map.setCenter(e.target.getPosition(), true)\n\n    });\n\n    map.setFitView();\n}\nconst startAnimation = function () {\n     window.marker.stopMove();\n     const currentIndex  = findNearestPointIndex(pathData, window.marker.getPosition())\n    if (!pathData || pathData.length === 0) {\n        ElMessage.error('请先查询有效轨迹数据');\n        return;\n    }\n    if(isPaused.value ) {\n\n        window.marker.resumeMove();\n        isPaused.value = false; // 恢复播放状态\n    } else {\n        const remainingPath =  currentIndex < pathData.length - 1 ? pathData.slice(currentIndex): pathData; // 获取剩余路径\n        window.marker.moveAlong(remainingPath, {\n        duration: speed.value , // 使用 speedMap 获取对应速度的持续时间\n        autoRotation: true,\n    });\n    }\n\n};\nconst pauseAnimation = function () {\n    isPaused.value = true; // 设置为非播放状态\n    window.marker.pauseMove();\n};\n\nconst resumeAnimation = function () {\n\n    window.marker.stopMove();\n    window.marker.setPosition(pathData[0]);\n    progress.value = 0; // 重置进度条\n    isPlaying.value = false; // 恢复播放状态\n    isPaused.value = false; // 恢复播放状态\n    // window.marker.moveAlong(pathData, {\n    //     duration: speed.value , // 使用 speedMap 获取对应速度的持续时间\n    //     autoRotation: true,\n    // });\n};\n\nconst stopAnimation = function () {\n    window.marker.stopMove();\n};\n\n\nconst handleSearchCard = () => {\n    // TODO 调用接口查询是否存在车辆, 返回布尔值, 如存在，则高亮该车辆\n\n    // const params = { carNumber: searchForm.carNumber  }\n    //  const hasTarget: boolean =  await https(params)\n    // if(hasTarget) {\n    //     hightLightNode(searchForm.carNumber);\n    // }\n}\n\n\nconst handleCarTypeChanged = () => {\n    // TODO , 返回布尔值, 如存在，则高亮该车辆\n\n    // const params = { carNumber: searchForm.carNumber  }\n    //  const hasTarget: boolean =  await https(params)\n    // if(hasTarget) {\n    //     hightLightNode(searchForm.carNumber);\n    // }\n}\n\n\n\n/**\n * 清理地图上的所有轨迹元素和标记\n */\nconst clearMapElements = () => {\n    // 停止当前动画\n    if (window.marker && window.marker.stopMove) {\n        window.marker.stopMove();\n    }\n\n    // 移除轨迹线\n    if (window.polyline) {\n        window.polyline.setMap(null);\n        window.polyline = null;\n    }\n\n    // 移除已行驶轨迹线\n    if (window.passedPolyline) {\n        window.passedPolyline.setMap(null);\n        window.passedPolyline = null;\n    }\n\n    // 移除标记物\n    if (window.marker) {\n        window.marker.setMap(null);\n        window.marker = null;\n    }\n};\n\n\nconst handleReset = () => {\n    searchForm.beginDate = '';\n    searchForm.endDate = '';\n    searchForm.carNumber = '';\n    clearMapElements(); // 清除地图上的所有元素\n    pathData = []; // 清空路径数据\n     // 清除树组件的选中状态\n    if (treeRef.value && treeRef.value.setCurrentKey) {\n        treeRef.value.setCurrentKey(null); // 设置为null来清除选中状态\n    }\n}\n\n\n// 查询轨迹\nconst handleSearch = async ():void => {\n    //TODO 调用接口查询轨迹数据\n    // if (!searchForm.beginDate ) {\n    //     ElMessage.error('请选择开始日期');\n    //     return;\n    // }\n    // if (!searchForm.carNumber ) {\n    //     ElMessage.error('请选择车辆');\n    //     return;\n    // }\n    // 查询条件参数组装\n    const params = {\n        beginDate: searchForm.beginDate,\n        endDate: searchForm.endDate || dayjs().format('YYYY-MM-DD'),\n        carNumber: searchForm.carNumber\n    };\n    // 获取新数据\n    try {\n        const data = await getPath(params);\n        pathData = data; // 更新全局路径数据\n        clearMapElements();\n        drawMap(pathData); // 重绘地图元素\n    } catch (error) {\n        ElMessage.error('轨迹数据查询失败');\n    }\n    parkTablePager.value.page = 1; // 重置停靠表分页\n    locationTablePager.value.page = 1; // 重置历史轨迹分页\n    getParkTableList()\n    getLocationTableList()\n}\nconst handleNodeClick = (data: { label: string , children: any[] } )=> {\n    const isCarNode = !(data.children && data.children.length) // 是否选中的是车辆\n    searchForm.carNumber = isCarNode ? data.label : '' // 如果是车辆节点，则设置车牌号;\n\n};\n\n\nwatch(speed, (newSpeed) => {\n    // if (window.marker) {\n    //     debugger;\n    //     const currentPosition = window.marker.getPosition();\n    //     const currentIndex = pathData.findIndex((point) =>\n    //         point[0] === currentPosition.lng && point[1] === currentPosition.lat\n    //     );\n    //     if (currentIndex !== -1) {\n    //         const remainingPath = pathData.slice(currentIndex);\n    //         window.marker.stopMove();\n    //         window.marker.setPosition(remainingPath[0]);\n    //         window.marker.moveAlong(remainingPath, {\n    //             duration: 101 - newSpeed,\n    //             autoRotation: true,\n    //         });\n    //     }\n    // }\n});\n\nconst handleSpeedChange = (e) => {\n\n   if (window.marker && isPlaying.value  && !isPaused.value ) {\n        const currentPosition = window.marker.getPosition();\n         console.log(currentPosition)\n        const currentIndex  = findNearestPointIndex(pathData, currentPosition);\n         console.log(currentIndex)\n        if (currentIndex !== -1 && currentIndex < pathData.length - 1 ) {\n            const remainingPath = pathData.slice(currentIndex);\n            window.marker.stopMove();\n            window.marker.setPosition(remainingPath[0]);\n            window.marker.moveAlong(remainingPath, {\n                duration: speed.value,\n                autoRotation: true,\n            });\n        }\n    }\n}\n\nconst handleProgressChange = (val) => {\n    console.log(val)\n    if(!pathData || !pathData.length) return\n    if (window.marker) {\n        const currentIndex = Math.floor(progress.value / 100 * pathData.length);\n        const remainingPath = pathData.slice(currentIndex);\n      //  isPlaying.value &&\n        map.setCenter(remainingPath[0], true)\n        window.marker.setPosition(remainingPath[0]);\n        if(currentIndex >= pathData.length - 1) {\n            progress.value = 100; // 如果点击的点是最后一个点，则设置进度为100%\n            isPlaying.value = false; // 停止播放状态\n            isPaused.value = false; // 停止暂停状态\n            return;\n        }\n        if (isPlaying.value && !isPaused.value && currentIndex < pathData.length - 1) {\n            window.marker.stopMove();\n\n            window.marker.setPosition(remainingPath[0]);\n            window.marker.moveAlong(remainingPath, {\n                duration: speed.value,\n                autoRotation: true,\n            });\n\n        }\n    }\n}\n\nconst handleTouchStart = e => {\n    // 在触摸开始时暂停动画\n    window.marker.stopMove();\n}\n\n\n// 辅助函数：查找最近路径点\nfunction findNearestPointIndex(path: number[][], position: any) {\n     // 参数校验\n     if (!Array.isArray(path) || path.length === 0 || !position?.lng || !position?.lat) {\n        return 0; // 基本参数异常时默认返回第一个点\n    }\n\n    let minDiff = Infinity;\n    let nearestIndex = 0;\n\n    for (let i = 0; i < path.length; i++) {\n        const [lng, lat] = path[i];\n        // 计算经纬度差值的绝对值之和（不转换实际距离）\n        const diff = Math.abs(lng - position.lng) + Math.abs(lat - position.lat);\n\n        if (diff < minDiff) {\n            minDiff = diff;\n            nearestIndex = i;\n        }\n    }\n\n    return nearestIndex;\n}\n\n\n\n\nconst parkTableList = ref<object[]>([])\n\nconst parkTablePager = ref({\n    page: 1,\n    pageSize: 10,\n    total: 0,\n})\n\nconst locationTableList = ref<object[]>([])\n\nconst locationTablePager = ref({\n    page: 1,\n    pageSize: 10,\n    total: 0,\n})\n\nconst getParkTableList = async() => {\n    // TODO  停靠表  接口需要返回 list类型的data字段  和 总数据条数count字段，用于前端分页\n    // 接口入参params\n    const params = {\n        ...searchForm,\n        page: parkTablePager.value.page,\n        pageSize: parkTablePager.value.pageSize,\n\n    }\n    // 接口替换\n    const { data, total} = await paginate({\n        page: parkTablePager.value.page,\n        pageSize: parkTablePager.value.pageSize,\n        list: leftTable,\n    })\n\n    parkTableList.value = data;\n    parkTablePager.value.total = total;\n}\n\nconst getLocationTableList = async() => {\n    // TODO  历史轨迹  接口需要返回 list类型的data字段  和 总数据条数count字段，用于前端分页\n    // 接口入参params\n    console.log(rightTable)\n    const params = {\n        ...searchForm,\n        page: locationTablePager.value.page,\n        pageSize: locationTablePager.value.pageSize,\n\n    }\n\n    // 接口替换\n    const { data, total} = await paginate({\n        page: locationTablePager.value.page,\n        pageSize: locationTablePager.value.pageSize,\n        list: rightTable,\n    })\n\n\n    locationTableList.value = data;\n    locationTablePager.value.total = total;\n}\n\n\nconst handleSizeChange = (action: string, rows: number) => {\n    if(action === 'park') {\n        parkTablePager.value.page = 1;\n        parkTablePager.value.pageSize = rows;\n        getParkTableList()\n    } else {\n        locationTablePager.value.page = 1;\n        locationTablePager.value.pageSize = rows;\n    }\n\n};\nconst handleCurrentChange = (action: string, page: number) => {\n    if(action === 'park') {\n        parkTablePager.value.page = page;\n        getParkTableList()\n    } else {\n        locationTablePager.value.page = page;\n        getLocationTableList();\n    }\n};\n\nconst handleLocationRowClick = row => {\n    const { lat, lng } = row;\n    if (window.marker) {\n        const currentIndex = pathData.findIndex(point =>\n            point[0] === lng && point[1] === lat\n        );\n        const remainingPath = pathData.slice(currentIndex);\n      //  isPlaying.value &&\n        map.setCenter(remainingPath[0], true)\n        window.marker.setPosition(remainingPath[0]);\n        if (isPlaying.value && !isPaused.value ) {\n            window.marker.stopMove();\n\n            window.marker.setPosition(remainingPath[0]);\n            if(currentIndex < pathData.length - 1) {\n                window.marker.moveAlong(remainingPath, {\n                    duration: speed.value,\n                    autoRotation: true,\n                });\n            } else {\n                progress.value = 100; // 如果点击的点是最后一个点，则设置进度为100%\n                isPlaying.value = false; // 停止播放状态\n                isPaused.value = false; // 停止暂停状态\n            }\n\n\n        }\n    }\n}\n\n\n</script>\n\n<style scoped lang=\"scss\">\n.el-tree {\n    width: 100%;\n}\n.main-content{\n    overflow: auto;\n}\n.flex-box{\n    display: flex;\n\n    position: relative;\n    justify-content: space-between;\n    .left-box {\n        margin-right: 20px;\n        display: flex;\n\n        flex-direction: column;\n\n        height: 100%;\n        .tree-card{\n\n            flex: 1;\n\n            overflow: auto;\n        }\n        .el-card {\n            border:none;\n            box-shadow: none;\n        }\n        .bottom-card {\n            flex-shrink: 0;\n            margin-top: 20px;\n        }\n        .play-box {\n            padding: 5px;\n            border: 1px solid var(--el-color-primary);\n            border-radius: 25px;\n            margin-top: 20px;\n            display: inline-flex;\n            float: right;\n            text-align: right;\n            font-size: 25px;\n            color: var(--el-color-primary);\n            .el-icon {\n                cursor: pointer;\n                margin-left: 10px;\n                &:hover {\n                    opacity: 0.7;\n                }\n            }\n            // .reset {\n            //    color: var(--el-color-danger);\n            // }\n        }\n\n    }\n\n\n    #map-container {\n        padding-left: 10px;\n        border-left: 1px solid #dcdfe6;\n        position: absolute !important;\n        top: 0px;\n        left: 270px;\n        right: 0;\n        bottom: 0;\n        width: auto !important;\n        height: auto !important;\n        background: #fff;\n            ::v-deep(.resize-icon) {\n            left: 10px;\n        }\n    }\n\n}\n\n.tool-box {\n    position: absolute;\n    right: 10px;\n    bottom: 10px;\n    border-radius: 5px;\n    background: #fff;\n    padding: 0 10px 10px;\n    .input-item {\n        margin-top: 10px;\n    }\n}\n.table-box {\n    display: flex;\n    min-height: 300px;\n    margin-top: 20px;\n    .el-card {\n        width: 50%;\n        & + .el-card {\n            margin-left: 20px;\n        }\n    }\n    .el-pagination  {\n        margin-top: 20px ;\n        text-align: right;\n    }\n}\n.main-content > .btns{\n    margin:10px 0 20px;\n}\n.search-form{\n   ::v-deep(){\n    .el-input,.el-select{\n        width: 265px !important;\n    }\n   }\n}\n\n.el-radio {\n    margin-right: 10px;\n}\n\n</style>\n\n"],"names":["paths","getPath","carTeam","paginate","list","page","pageSize","total","start","end","leftTable","rightTable","item","index","_sfc_main","_defineComponent","__props","getIcon","ishighLight","iconPath","ref","treeRef","reactive","pathData","map","isPaused","searchForm","progress","speed","speedRadioOptions","carTeamData","handleMapResize","height","mapParentContainer","initMap","mapInstance","drawMap","pathData2","currentIndex","findNearestPointIndex","progrss","isPlaying","startAnimation","ElMessage","remainingPath","pauseAnimation","resumeAnimation","clearMapElements","handleReset","dayjs","params","parkTablePager","locationTablePager","getParkTableList","getLocationTableList","handleNodeClick","data","isCarNode","watch","newSpeed","handleSpeedChange","e","currentPosition","handleProgressChange","val","handleTouchStart","path","position","minDiff","nearestIndex","i","lng","lat","diff","parkTableList","locationTableList","handleSizeChange","action","rows","handleCurrentChange","handleLocationRowClick","row","point"],"mappings":"wPAAO,MAAMA,EAAQ,CACjB,CAAC,WAAY,QAAQ,EACrB,CAAC,WAAY,SAAS,EACtB,CAAC,UAAW,SAAS,EACrB,CAAC,WAAY,SAAS,EACtB,CAAC,WAAY,SAAS,EACtB,CAAC,WAAY,QAAQ,EACrB,CAAC,WAAY,QAAQ,EACrB,CAAC,WAAY,SAAS,EACtB,CAAC,WAAY,SAAS,EACtB,CAAC,WAAY,SAAS,EACtB,CAAC,WAAY,SAAS,EACtB,CAAC,UAAW,SAAS,EACrB,CAAC,WAAY,SAAS,EACtB,CAAC,UAAW,SAAS,EACrB,CAAC,WAAY,SAAS,EACtB,CAAC,WAAY,SAAS,EACtB,CAAC,WAAY,SAAS,EACtB,CAAC,UAAW,SAAS,EACrB,CAAC,WAAY,SAAS,EACtB,CAAC,WAAY,SAAS,EACtB,CAAC,WAAY,SAAS,EACtB,CAAC,WAAY,SAAS,EACtB,CAAC,SAAU,SAAS,EACpB,CAAC,WAAY,SAAS,EACtB,CAAC,WAAY,SAAS,EACtB,CAAC,WAAY,QAAQ,EACrB,CAAC,WAAY,OAAO,EACpB,CAAC,WAAY,SAAS,EACtB,CAAC,WAAY,SAAS,EACtB,CAAC,WAAY,SAAS,EACtB,CAAC,WAAY,SAAS,EACtB,CAAC,WAAY,SAAS,EACtB,CAAC,UAAW,SAAS,CACvB,EAGWC,GAAU,IACZD,EAGEE,GAAU,CACnB,CACI,GAAI,IACJ,MAAO,gBACP,SAAS,CACL,CACI,GAAI,MACJ,MAAO,cACX,EACA,CACI,GAAI,MACJ,MAAO,cACX,EACA,CACI,GAAI,MACJ,MAAO,cACX,CACJ,CACJ,EACA,CACI,GAAI,IACJ,MAAO,gBACP,SAAS,CACL,CACI,GAAI,MACJ,MAAO,cACX,EACA,CACI,GAAI,MACJ,MAAO,cACX,CACJ,CACJ,CACJ,EAGaC,EAAW,CAAI,CAAE,KAAAC,EAAM,KAAAC,EAAM,SAAAC,KAA0F,CAChI,MAAMC,EAAQH,EAAK,OAIbI,GAASH,EAAO,GAAKC,EACrBG,EAAMD,EAAQF,EAIb,MAAA,CACH,KAHSF,EAAK,MAAMI,EAAOC,CAAG,EAI9B,MAAAF,CAAA,CAER,EAEaG,GAAY,CAErB,CAAC,GAAI,EAAG,UAAW,iBAAQ,UAAW,mBAAoB,IAAI,WAAY,IAAK,YAAc,QAAS,mBAAoB,SAAU,4CAAc,EAClJ,CAAC,GAAI,EAAG,UAAW,iBAAQ,UAAW,mBAAoB,IAAI,UAAW,IAAK,YAAa,QAAS,mBAAoB,SAAU,4CAAc,CACpJ,EAEaC,GAAgBX,GAClBA,EAAM,IAAI,CAACY,EAAMC,KACb,CACH,GAAIA,EAAQ,EACZ,IAAKD,EAAK,GACV,IAAKA,EAAK,GACV,KAAM,iBAAiB,OAAOC,CAAK,EAAE,SAAS,EAAG,GAAG,IACpD,MAAQ,GAAGA,EAAQ,kBACnB,SAAU,8CAAgBA,EAAQ,GAAA,EAEzC,GAEFb,CAAK,6QCyCRc,GAAAC,GAAA,CACA,OAAA,OAEA,MAAAC,EAAA,CAAA,MACAC,EAAA,CAAAC,EAAA,KAAA,CAAA,MACAC,EAAA,IAAA,mCAAA,KAAA,QAAA,EAAA,KAAA,OACA,IAAA,KAAA,KAAA,CACA,MAAAA,EACA,KAAA,IAAA,KAAA,KAAA,MAAA,IAAA,EAEA,UAAA,SAAA,KAAA,MAAA,IAAA,CAiBA,CAAA,CACA,IACAC,EAAA,EAAA,EACAC,EAAAD,EAAA,IAAA,EACAE,EAAA,CAAA,CAAA,EACA,IAAAC,EAAA,CAAA,EAEAC,OACA,MACAC,EAAAL,EAAA,EAAA,EACAM,EAAAJ,EAAA,CACA,UAAA,GAEA,UAAA,GACA,QAAA,EACA,CAAA,EACAF,EAAA,CAAA,CAAA,EAAA,MACAO,EAAAP,EAAA,CAAA,EACAQ,EAAAR,EAAA,GAAA,EACAS,EAAA,CACA,CAAA,MAAA,KAAA,MAAA,GAAA,EACA,CAAA,MAAA,KAAA,MAAA,GAAA,EACA,CAAA,MAAA,MAAA,MAAA,GAAA,EAIA,CAAA,MAAA,MAAA,MAAA,GAAA,EAEA,CAAA,kBAAA,EAAA,CAIA,EAEA3B,EAAAkB,EAAA,CAAA,CAAA,GAEA,IAAA,CAEAlB,EAAA,MAAA4B,EACA,KAEA,MAAAC,EAAA,CAAA,CAAA,OAAAC,KAAA,CACA,MAAAC,EAAA,SAAA,eAAA,oBAAA,EAAAA,EAAA,MAAA,OAAAD,EAAA,IAAA,EAEAE,EAAAX,GAAA,CAGAC,EAAAW,CAAA,EACAC,EAAAC,GAAA,CAAA,OAAA,UAGA,OAAA,SAAA,OAAA,IAAA,EACA,OAAA,gBACA,OAAAd,eAAAA,OAAAA,IAAAA,EAAA,OACA,SAAA,IAAA,KAAA,SAAA,CACA,IAAAC,EACA,KAAAa,EACA,QAAA,GAEA,YAAA,OACA,aAAA,CAAA,CAAA,EACA,OACA,eAAA,IAAA,KAAA,SAAA,CACA,IAAAb,EAGA,YAAA,OACA,aAAA,CAAA,CAAA,EACA,cACA,IAAA,KAAA,OAAA,CAGA,IAAAA,EACA,SAAAa,EAAA,GAGA,KAAApB,EAAA,EACA,sBAAAM,IAAAA,GAAAA,CACA,CAAA,EACA,OAAA,OAAA,GAAA,SAAA,SAAA,EAAA,CACA,MAAAe,EAAAC,EAAAF,EAAA,EAAA,OAAA,YAAA,CAAA,EACAG,EAAAF,EAAAf,EAAAA,OAAA,IACAI,EAAA,MAAAa,EACA,QAAA,IAAAA,CAAA,EAEAC,EAAA,MAAAH,EAAAD,EAAA,OAAA,EAEA,OAAA,eAAA,QAAA,EAAA,UAAA,EACAb,EAAA,UAAA,EAAA,OAAA,YAAA,EAAA,EAAA,CACA,CAAA,EACAA,EAAA,WAAA,CACA,EACAkB,GAAA,UAAA,CACA,OAAA,kBACA,MAAAJ,EAAAC,EAAAhB,EAAA,OAAA,OAAA,YAAA,CAAA,EACA,GAAA,CAAAA,GAAAA,EAAA,SAAA,EAAA,CACAoB,QAAA,8DAAA,EAEA,MACA,CACA,GAAAlB,EAAA,MACA,OAAA,OAAA,aACAA,EAAA,cACA,MACAmB,EAAAN,EAAAf,EAAA,OAAA,EAAAA,EAAA,MAAAe,CAAA,EAAAf,EACA,OAAA,OAAA,UAAAqB,EAAA,CACA,SAAAhB,EAAA,MAEA,aAAA,EACA,CAAA,CACA,CACA,EACAiB,GAAA,UAAA,CAEApB,WAEA,OAAA,OAAA,WACA,EACAqB,GAAA,UAAA,CACA,OAAA,OAAA,WACA,OAAA,OAAA,YAAAvB,EAAA,EAAA,EAKAI,EAAA,MAAA,EAEAc,WACAhB,QAAA,EAAA,EAkCAsB,EAAA,IAAA,CAGA,OAAA,QAAA,OAAA,OAAA,UACA,OAAA,OAAA,WAEA,OAAA,WAGA,gBAAA,OAAA,IAAA,EACA,OAAA,SAAA,MAEA,OAAA,iBAGA,sBAAA,OAAA,IAAA,EACA,OAAA,eAAA,MAEA,OAAA,SACA,OAAA,OAAA,OAAA,IAAA,EAGA,cAAA,KAEA,EACAC,GAAA,IAAA,CACAtB,EAAA,UAAA,GACAA,EAAA,QAAA,GAEAA,EAAA,UAAA,GACAqB,IACAxB,EAAA,CAAA,EACAF,EAAA,OAAAA,EAAA,MAAA,eAIAA,sBAAA,IAAA,CAWA,KAEA,SAAA,CAAA,QACA,CACA,UAAAK,EAAA,UAEA,QAAAA,EAAA,SAAAuB,GAAA,EAAA,OAAA,YAAA,EACA,UAAAvB,EAAA,SACA,EACA,GAAA,GACA,MAAAzB,GAAAiD,CAAA,EAEAH,IACAX,EAAAb,CAAA,CACA,MAAA,CACAoB,EAAA,MAAA,kDAAA,CACA,CACAQ,EAAA,MAAA,KAAA,EACAC,EAAA,MAAA,KAAA,EACAC,IACAC,GACA,EAEAC,GAAAC,GAAA,CAGA,MAAAC,EAAA,EAAAD,EAAA,UAAAA,EAAA,SAAA,QAiBA9B,EAAA,UAAA+B,EAAAD,EAAA,MAAA,EAEA,EAEAE,GAAA9B,EAAA+B,GAAA,CACA,CAAA,EACA,MAAAC,GAAAC,GAAA,CACA,GAAA,OAAA,QAAApB,EAAA,OAAA,CAAAhB,EAAA,MAAA,CACA,MAAAqC,EAAA,OAAA,OAAA,YAAA,EACA,QAAA,IAAAA,CAAA,EACA,MAAAxB,EAAAC,EAAAhB,EAAAuC,CAAA,EAEA,GADA,QAAA,KAAA,EACAxB,IAAA,IAAAA,EAAAf,EAAA,OAAA,EAAA,CACA,MAAAqB,IAAA,MAAAN,CAAA,EAAA,cACA,WAAA,OACA,OAAA,YAAAM,EAAA,EAAA,EACA,OAAA,OAAA,UAAAA,EAAA,CACA,SAAAhB,EAAA,MACA,aAAA,EAAA,CACA,CAEA,CACA,CACA,EAAAmC,GAAAC,GAAA,CAEA,GADA,YAAAA,CAAA,EACA,GAAAzC,MAAA,SAGA,OAAA,OAAA,CACA,MAAAe,EAAA,KAAA,MAAAX,EAAA,MAAA,IAAAJ,EAAA,MAAA,EACAqB,EAAArB,EAAA,MAAAe,CAAA,EAGA,GAFAd,EAAA,UAAAoB,EAAA,GAAA,EAAA,EACA,OAAA,OAAA,YAAAA,EAAA,EAAA,EACAN,GAAAf,EAAA,OAAA,EAAA,CACAI,EAAA,MAAA,IACAc,EAAA,MAAA,GACAhB,EAAA,SACA,MAEA,CACAgB,EAAA,UAAA,OAAAH,EAAAf,EAAA,OAAA,IAAA,cACA,WAAA,OACA,OAAA,YAAAqB,EAAA,EAAA,EACA,OAAA,OAAA,UAAAA,EAAA,CAEA,SAAAhB,EAAA,MACA,aAAA,EAAA,CACA,EAIA,CAAA,EAKAqC,GAAAJ,IAEA,OAAA,OAAA,UACA,EACA,SAAAtB,EAAA2B,EAAAC,EAAA,CAEA,GAAA,CAAA,MAAA,QAAAD,CAAA,GAAAA,EAAA,SAAA,GAAA,EAAAC,GAAA,MAAAA,EAAA,MAAA,EAAAA,GAAA,MAAAA,EAAA,KACA,MAAA,GAGA,IAAAC,EAAA,IAEAC,EAAA,EAEA,UAAA,EAAAC,EAAAJ,EAAA,OAAAI,IAAA,CACA,KAAA,CAAAC,EAAAC,CAAA,EAAAN,EAAAI,GACAG,EAAA,KAAA,IAAAF,EAAAJ,EAAA,GAAA,EAAA,KAAA,IAAAK,EAAAL,EAAA,GAAA,EACAM,EAAAL,IACAA,EAAAK,EAEAJ,EAAAC,EAMA,CAEA,QAAA,CACA,MACAI,EAAAtD,EAAA,CAAA,CAAA,EACA+B,EAAA/B,EAAA,CACA,KAAA,EAEA,SAAA,GAEA,OAAA,CAAA,EAEAuD,EAAAvD,EAAA,CAAA,CAAA,EACAgC,EAAAhC,EAAA,CACA,KAAA,EAEA,YAGA,MAAA,CAAA,CAAA,EAEAiC,EAAA,SAAA,GAGA,GAAA3B,EAEA,KAAAyB,EAAA,WACA,WAAA,MAAA,QACA,GAAA,KACA,CAAA,KAAAK,EAAA,MAAAjD,CAAA,EAAA,MAAAJ,EAAA,CACA,KAAAgD,EAAA,MAAA,KAEA,SAAAA,EAAA,MAAA,SACA,KAAAzC,EAAA,CACA,EAEAgE,UAGAvB,EAAA,MAAA,MAAA5C,CACA,EACA+C,EAAA,SAAA,CACA,QAAA,QAGA,GAAA5B,EAGA,KAAA0B,QAAA,KACA,WAAA,MAAA,QACA,EAAA,KACA,CAAA,KAAAI,EAAA,MAAAjD,CAAA,EAAA,MAAAJ,EAAA,CACA,KAAAiD,EAAA,MAAA,KAGA,SAAAA,EAAA,MAAA,SACA,KAAAzC,CAAA,CACA,EAGAgE,EAAA,MAAAnB,EACAJ,EAAA,MAAA,MAAA7C,CACA,EACAqE,EAAA,CAAAC,EAAAC,IAAA,CACAD,IAAA,QACA1B,EAAA,MAAA,KAAA,EACAA,EAAA,eAAA2B,EACAzB,MAGAD,EAAA,MAAA,KAAA,EACAA,EAAA,MAAA,SAAA0B,EAEA,EACAC,EAAA,CAAAF,EAAAxE,IAAA,CACAwE,IAAA,QACA1B,EAAA,WAAA9C,EACAgD,MAEAD,EAAA,MAAA,KAAA/C,EAEAiD,IAEA,EACA0B,GAAAC,GAAA,CAAA,KACA,CAAA,IAAAT,EAAA,IAAAD,CAAA,EAAAU,EACA,GAAA,OAAA,OAAA,CACA,MAAA3C,EAAAf,EAAA,UAEA2D,GAAAA,EAAA,KAAAX,GAAAW,EAAA,KAAAV,CACA,EACA5B,EAAArB,EAAA,MAAAe,CAAA,EACAd,EAAA,YAAA,GAAA,EAAA,EAEA,OAAA,OAAA,YAAAoB,EAAA,EAAA,EACAH,EAAA,OAAA,CAAAhB,EAAA,QACA,OAAA,OAAA,WAAA,cACA,YAAAmB,EAAA,EAAA,EACAN,EAAAf,EAAA,OAAA,EACA,OAAA,OAAA,UAAAqB,EAAA,CACA,SAAAhB,EAAA,MACA,aAAA,EACA,CAAA,GAEAD,EAAA,MAAA,IAGAc,EAAA,MAAA,GACAhB,EAAA,MAAA"}