{"version":3,"file":"index.1a510d56.js","sources":["../../src/hooks/useTableSetting.ts","../../src/views/taskManage/index.vue"],"sourcesContent":["import { onMounted, nextTick, ref, onUnmounted } from 'vue';\r\n\r\nfunction getElementTop(el: HTMLElement): number {\r\n    if (el && el.offsetParent) {\r\n        return getElementTop(el.offsetParent as HTMLElement) + el.offsetTop;\r\n    }\r\n    return el.offsetTop;\r\n}\r\n\r\nexport function setTableMaxHeight(id: string, num = 120): number {\r\n    // debugger;\r\n    const scrollHeight = document.body.offsetHeight;\r\n    const offsetTop = getElementTop(document.getElementById(id) as HTMLElement);\r\n    const maxHeight = scrollHeight - offsetTop - num;\r\n    return maxHeight;\r\n}\r\n\r\ntype containerOps = {\r\n    id?: string;\r\n    offsetBottom?: number;\r\n};\r\n\r\n// 设置table的自适应高度值\r\nexport default function useTableSetting({ id = 'xc-table', offsetBottom = 100 }: containerOps = {}) {\r\n    const maxTableHeight = ref(0);\r\n    const setHeight = () => {\r\n\r\n        maxTableHeight.value = setTableMaxHeight(id, offsetBottom);\r\n    };\r\n    onMounted(async () => {\r\n        setTimeout(setHeight, 200);\r\n        window.addEventListener('resize', setHeight);\r\n    });\r\n    onUnmounted(() =>{\r\n        window.removeEventListener('resize', setHeight);\r\n    });\r\n    return {\r\n        maxTableHeight,\r\n        setTableMaxHeight,\r\n    };\r\n}\r\n","<!--\r\n * @Author: leiming\r\n * @Date: 2025-06-12 10:23:40\r\n * @LastEditors: leiming\r\n * @LastEditTime: 2025-06-12 10:23:42\r\n * @Description: file content\r\n-->\r\n<template>\r\n    <div class=\"main-content\">\r\n        <ElForm\r\n            ref=\"searchFormRef\"\r\n            :model=\"searchForm\"\r\n            inline\r\n            class=\"search-form\"\r\n            label-width=\"68px\"\r\n            label-position=\"left\">\r\n\r\n                <ElFormItem label=\"字典类型\" prop=\"dictCode\">\r\n                    <DictSelect  v-model=\"searchForm.dictCode\" clearable :type=\"DictType.DIC_TYPE\" placeholder=\"请选择\" />\r\n                </ElFormItem>\r\n\r\n\r\n                <ElFormItem label=\"字典值\" props=\"dicValue\">\r\n                    <ElInput  v-model=\"searchForm.dictValue\" clearable placeholder=\"请输入内容\"></ElInput>\r\n                </ElFormItem>\r\n\r\n\r\n            <ElFormItem>\r\n                <ElButton\r\n\r\n                    color=\"#4371EE\"\r\n                    @click=\"reset(false)\"\r\n                >\r\n                    查询\r\n                </ElButton>\r\n                <ElButton\r\n\r\n                    plain=\"\"\r\n                    @click=\"reset(true)\"\r\n                >\r\n                    重置\r\n                </ElButton>\r\n            </ElFormItem>\r\n        </ElForm>\r\n            <!-- </ElCol> -->\r\n            <div class=\"btns\">\r\n                <ElButton\r\n\r\n                    class=\"add-btn\"\r\n                    color=\"#4371EE\"\r\n\r\n                    :icon=\"Plus\"\r\n                    @click=\"addShow = true\"\r\n                >\r\n                    添加字典\r\n                </ElButton>\r\n            </div>\r\n            <ElTable\r\n                border\r\n                id=\"userTable\"\r\n                class=\"table\"\r\n                :data=\"tableData\"\r\n                :style=\"{ height: `${maxTableHeight}px`, overflow: 'auto' }\"\r\n            >\r\n                <ElTableColumn label=\"序号\" width=\"80\">\r\n                    <template #default=\"scoped\">\r\n                        {{ ((searchForm.pageNum - 1) * searchForm.pageSize) + scoped.$index + 1 }}\r\n                    </template>\r\n                </ElTableColumn>\r\n                <ElTableColumn label=\"字典类型\">\r\n                    <template #default=\"scoped\">\r\n                        {{ dictType.find((dict) => dict.dictValue === scoped.row.dictCode)?.dictDesc }}\r\n                    </template>\r\n                </ElTableColumn>\r\n                <ElTableColumn prop=\"dictCode\" label=\"字典编码\"></ElTableColumn>\r\n                <ElTableColumn prop=\"dictDesc\" label=\"字典名称\"></ElTableColumn>\r\n                <ElTableColumn prop=\"dictValue\" label=\"字典值\"></ElTableColumn>\r\n\r\n                <ElTableColumn prop=\"createTime\" label=\"创建时间\" width=\"150\"></ElTableColumn>\r\n                <ElTableColumn  fixed=\"right\" label=\"操作\" width=\"120\">\r\n                    <template #default=\"scope\">\r\n                        <ElButton\r\n\r\n                            link\r\n                            type=\"text\"\r\n\r\n                            @click=\"editFun(scope.row)\"\r\n                        >\r\n                            修改\r\n                        </ElButton>\r\n                        <ElButton  link type=\"text\"  @click=\"handleDelete(scope.row)\">\r\n                            删除\r\n                        </ElButton>\r\n\r\n                    </template>\r\n                </ElTableColumn>\r\n            </ElTable>\r\n\r\n            <ElPagination\r\n                class=\"pagination\"\r\n                background\r\n                layout=\"total,sizes,prev, pager, next,jumper\"\r\n                :total=\"total\"\r\n                :current-page=\"searchForm.pageNum\"\r\n                :page-sizes=\"[10, 20, 50, 100]\"\r\n                :page-size=\"searchForm.pageSize\"\r\n                @size-change=\"handleSizeChange\"\r\n                @current-change=\"handleCurrentChange\"\r\n            />\r\n\r\n            <!--新增或编辑角色-->\r\n            <ElDialog   class=\"main-dialog\" v-model=\"addShow\"  :title=\"addForm.id ? '修改字典' : '添加字典'\" width=\"480px\">\r\n                <div class=\"dialog-form\">\r\n                    <ElForm\r\n                        ref=\"addFormRef\"\r\n                        :model=\"addForm\"\r\n                        :rules=\"rules\"\r\n                        label-width=\"80px\"\r\n                        label-position=\"left\"\r\n                    >\r\n\r\n                    <ElFormItem label=\"字典名称\" prop=\"dictDesc\" class=\"full-item\">\r\n                        <el-input v-model=\"addForm.dictDesc\"  placeholder=\"请输入\"  />\r\n                    </ElFormItem>\r\n                    <ElFormItem label=\"字典类型\" prop=\"dictCode\" class=\"full-item\">\r\n                        <DictSelect\r\n                            v-model=\"addForm.dictCode\"\r\n                            :type=\"DictType.DIC_TYPE\"\r\n\r\n                            placeholder=\"请输入\"\r\n\r\n                        />\r\n                    </ElFormItem>\r\n                    <ElFormItem label=\"字典值\" prop=\"dictValue\" class=\"full-item\">\r\n                        <el-input v-model=\"addForm.dictValue\"  placeholder=\"请输入\"  />\r\n                    </ElFormItem>\r\n                    </ElForm>\r\n                </div>\r\n                <template #footer>\r\n                    <span  class=\"dialog-footer\">\r\n                        <ElButton  @click=\"addShow = false\">取 消</ElButton>\r\n                        <ElButton color=\"#4371EE\"  @click=\"submitForm(addFormRef)\">提 交</ElButton>\r\n                    </span>\r\n                </template>\r\n\r\n            </ElDialog>\r\n\r\n\r\n\r\n    </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport useTableSetting from '@/hooks/useTableSetting';\r\nimport { ref, onMounted, reactive, nextTick, watch } from 'vue';\r\nimport { DictType, dictType } from '@/components/DictSelect/localDictDefine';\r\nimport { ElMessage, ElTree, FormInstance, ElMessageBox } from 'element-plus';\r\n\r\nimport { getFlatDeepTreeData } from '@/utils/common';\r\nimport { Search, Plus } from '@element-plus/icons-vue';\r\nimport { validateForm } from '@/helper/index';\r\nimport authList from '@/router/auth.ts';\r\nimport { addDict, delDict, dictList, editDict } from '@/api/index.ts';\r\n\r\nconst treeRef = ref<InstanceType<typeof ElTree>>();\r\nconst tableData: any = ref([\r\n\r\n]);\r\n\r\n\r\n\r\nconst searchFormRef = ref<FormInstance>(null);\r\n\r\nconst details = ref({});\r\n\r\n\r\nconst searchForm = reactive<searchFormType>({\r\n    dictCode: '',\r\n    dictValue: '',\r\n    pageNum: 1,\r\n    pageSize: 10,\r\n});\r\nconst total = ref<number>(0);\r\n\r\n\r\n\r\nconst rules = reactive({\r\n    dictValue: [{ required: true, message: '请输入字典值', trigger: 'blur' }],\r\n    dictCode: [{ required: true, message: '请选择字典类型', trigger: 'change' }],\r\n    dictDesc: [{ required: true, message: '请输入字典名称', trigger: 'blur' }],\r\n});\r\n\r\n\r\nconst getList = async () => {\r\n    try {\r\n        const res: any = await dictList(searchForm);\r\n        tableData.value = res.list;\r\n\r\n        total.value = res.total;\r\n    } catch (err) {}\r\n};\r\n\r\nconst handleDelete = async (row) => {\r\n    await ElMessageBox.confirm('确认要删除吗？', '提示', {\r\n        confirmButtonText: '确  定',\r\n        cancelButtonText: '取  消',\r\n        type: 'warning'\r\n    });\r\n    await delDict({ id: row.id });\r\n    ElMessage.success('删除成功！');\r\n    reset();\r\n};\r\n\r\nconst goDetail = (row) => {\r\n    details.value = JSON.parse(JSON.stringify(row));\r\n};\r\n\r\nconst reset = (reset: boolean) => {\r\n    if(reset) {\r\n        searchFormRef.value.resetFields();\r\n    }\r\n    searchForm.pageNum = 1;\r\n    getList();\r\n};\r\n\r\nconst handleSizeChange = (rows: number) => {\r\n    searchForm.pageNum = 1;\r\n    searchForm.pageSize = rows;\r\n    getList();\r\n};\r\nconst handleCurrentChange = (page: number) => {\r\n\r\n    searchForm.pageNum = page;\r\n    getList();\r\n};\r\n\r\n\r\nconst addShow = ref<boolean>(false);\r\nconst addFormRef = ref<FormInstance>(null);\r\nconst addForm = reactive<addDictType>({\r\n    id: null,\r\n    dictDesc: null,\r\n    dictName: null,\r\n    dictValue: null,\r\n    dictCode: null,\r\n});\r\n\r\nconst resetForm = (form) => {\r\n    Object.keys(form).forEach(key => addForm[key] = '');\r\n};\r\n\r\nwatch(\r\n    addShow,\r\n    val => {\r\n        if(!val) {\r\n            addFormRef.value.clearValidate();\r\n            resetForm(addForm);\r\n        }\r\n    }\r\n);\r\n\r\nconst submitForm = async (formEl: FormInstance | undefined) => {\r\n    await validateForm(formEl);\r\n    addForm.dictName = dictType.find((dict) => dict.dictValue === addForm.dictCode)?.dictDesc;\r\n    addForm.id ? await editDict(addForm) : await addDict(addForm);\r\n    ElMessage.success('提交成功！');\r\n    addShow.value = false;\r\n    getList();\r\n};\r\n\r\n\r\n\r\nconst editFun = async (row: any) => {\r\n    addShow.value = true;\r\n    Object.keys(row).forEach(key => {\r\n        if(key in addForm) {\r\n            addForm[key] = row[key];\r\n        }\r\n    });\r\n};\r\n\r\n\r\n\r\nonMounted(() => {\r\n\r\n    getList();\r\n});\r\nconst { maxTableHeight, setTableMaxHeight } = useTableSetting({ id: 'userTable', offsetBottom: 92 });\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.main-content > .btns{\r\n    margin:10px 0 20px;\r\n}\r\n.authItem{\r\n    align-items: flex-start;\r\n}\r\n.search-form{\r\n   ::v-deep(){\r\n    .el-input,.el-select{\r\n        width: 265px !important;\r\n    }\r\n   }\r\n}\r\n</style>\r\n\r\n"],"names":["getElementTop","el","setTableMaxHeight","id","num","scrollHeight","offsetTop","useTableSetting","offsetBottom","maxTableHeight","ref","setHeight","onMounted","onUnmounted","_sfc_main","_defineComponent","__props","tableData","searchFormRef","searchForm","reactive","total","rules","getList","dictList","res","handleDelete","row","ElMessageBox","delDict","ElMessage","reset","reset2","handleSizeChange","rows","handleCurrentChange","page","addShow","addFormRef","addForm","resetForm","form","key","watch","val","submitForm","formEl","validateForm","_a","dictType","dict","editDict","addDict","editFun"],"mappings":"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"}